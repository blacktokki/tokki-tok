{"version":3,"sources":["src/lang/index.ts","src/hooks/useAuthContext.tsx","src/hooks/useColorScheme.ts","src/lib/@expo/vector-icons.tsx","src/hooks/useIsMobile.ts","src/services/axios.ts","src/components/MobileSafeAreaView.tsx","App.tsx","src/hooks/useCachedResources.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/constants/Envs.ts","src/services/account.ts","src/services/messenger.ts","src/hooks/useLangContext.tsx","src/services/notification.ts"],"names":["translations","ko","require","_ref","_RNLocalize$findBestL","RNLocalize","Object","keys","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","AuthContext","createContext","auth","dispatch","authReducer","initialState","action","type","_objectSpread","request","username","password","user","undefined","Error","AuthProvider","children","_useReducer","useReducer","_useReducer2","_slicedToArray","authState","_useState","useState","_useState2","error","setError","useMemo","useEffect","checkLogin","then","catch","e","console","log","login","data","_data$response","_data$response$data","response","message","getNotification","id","noti","putNotification","token","logout","_jsx","Provider","value","useContext","useInitColorScheme","complete","setComplete","AsyncStorage","getItem","v","Appearance","set","colorScheme","setColorScheme","setItem","useColorScheme","dark","useTheme","lazyIcon","key","Icon","React","lazy","module","default","props","Suspense","fallback","_Fragment","AntDesign","Ionicons","FontAwesome","Entypo","SimpleLineIcons","MaterialCommunityIcons","useMobileDetect","isMobile","Platform","OS","defaultOption","baseURL","withCredentials","headers","_axios","axios","create","interceptors","use","config","Promise","reject","status","getToken","_asyncToGenerator","r","post","accountURL","setToken","_x","apply","arguments","finally","_ref2","defaults","removeItem","_x2","_ref3","useIsMobile","window","innerHeight","height","setHeight","onChange","Dimensions","addEventListener","removeEventListener","View","style","queryClient","QueryClient","App","isLoadingComplete","_React$useState","_React$useState2","setLoadingComplete","_loadResourcesAndDataAsync","SplashScreen","Font","font","warn","loadResourcesAndDataAsync","useCachedResources","isAppearenceComplete","isViewer","location","pathname","endsWith","Navigation","ChatViewer","SafeAreaProvider","MobileSafeAreaView","QueryClientProvider","client","IntlProvider","_jsxs","StatusBar","l","search","decoded","slice","split","map","s","replace","join","history","replaceState","hash","exports","_split","_split2","websockerURL","FCM_PUBLIC_VAPID_KEY","FCM_API_KEY","TURN_SERVER","length","get","checkLoginToken","_ref4","_yield$axios$get","_ref5","e2","isOffline","code","startsWith","getUserList","_ref6","postUser","_ref7","imageUrl","inviteGroupId","isAdmin","is_staff","isGuest","is_guest","name","_x3","patchUser","_ref8","patch","ids","updated","_x4","deleteUser","_ref9","userId","delete","_x5","getExternalUserList","_ref10","_x6","getChannelList","user_id","resolve","postChannel","channel","postDirectChannel","putChannel","put","getMessengerMemberList","channel_id","_x7","postBulkMessengerMember","user_ids","_x8","deleteMessengerMember","member_id","_x9","getMessengerContentList","id_lt","id_lt_param","viewerPath","results","_x10","_x11","_x12","getNewMessengerContentList","updated_gte","_x13","_x14","getTimerMessageContentList","_ref11","timer_gt","_x15","_x16","postMessage","_ref12","callback","file","formData","FormData","append","entries","forEach","filename","onUploadProgress","p","progress","loaded","total","_x17","_x18","patchMessengerContent","_ref13","content","_x19","IntlContext","setLocale","_useState3","_useState4","_useContext","lang","params","formatMessage","defaultMessage","toString","postNotification","notification"],"mappings":"iKAIaA,EAAe,CAC1BC,GAAIC,EAAQ,MAQdC,EAC2D,OAD3DC,EACEC,sBAA+BC,OAAOC,KAAKP,KAAcI,EAH1C,CAAEI,YAAa,KAAMC,OAAO,GAErCD,EAAWL,EAAXK,YAAaC,EAAKN,EAALM,MAIrBC,IAAYC,SAASF,GAGrB,IAAMG,EAAOC,YACX,CACEC,cAAe,KACfC,OAAQP,EACRQ,SAAUhB,EAAaQ,IAEzBS,eAGaL,O,wsBClBf,IAAMM,EAAcC,wBAAyE,CAACC,KAAK,GAAIC,SAAS,eAE1GC,EAAa,SAACC,EAAwBC,GAC1C,OAAQA,EAAOC,MACX,IAAK,gBACH,OAAAC,IAAA,GACKH,GAAY,IACfI,QAAQ,CAACC,SAASJ,EAAOI,SAAUC,SAASL,EAAOK,YAEvD,IAAK,cACH,OAAAH,IAAA,GACKH,GAAY,IACfI,QAAQ,CAACC,SAAS,QAASC,SAAS,WAExC,IAAK,gBACD,OAAAH,IAAA,GACOH,GAAY,IACfO,KAAKN,EAAOM,KACZH,aAAQI,IAEhB,IAAK,eACD,OAAAL,IAAA,GACOH,GAAY,IACfI,aAAQI,IAEhB,IAAK,iBACD,OAAAL,IAAA,GACOH,GAAY,IACfI,QAAQ,OAEhB,IAAK,iBACD,OAAAD,IAAA,GACKH,GAAY,IACfO,KAAK,KACLH,aAAQI,IAEd,IAAK,UACH,OAAAL,IAAA,GACKH,GAAY,IACfO,UAAKC,IAET,QACI,MAAM,IAAIC,MAAM,0BAA2BR,EAAOC,QAK/CQ,EAAe,SAAH9B,GAA6C,IAAxC+B,EAAQ/B,EAAR+B,SAC5BC,EAA8BC,qBAAWd,EAAa,IAAWe,EAAAC,IAAAH,EAAA,GAA1DI,EAASF,EAAA,GAAEhB,EAAQgB,EAAA,GAC1BG,EAA0BC,qBAAkBC,EAAAJ,IAAAE,EAAA,GAArCG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBtB,EAAOyB,mBAAQ,iBAAK,CACxBf,KAAKS,EAAUT,QACb,CAACS,IA0BL,OAzBAO,qBAAU,gBACYf,IAAjBQ,EAAUT,KACXiB,cAAaC,MAAK,SAAClB,GACjBT,EAAS,CAACI,KAAK,gBAAiBK,YAC/BmB,OAAM,SAACC,GACRC,QAAQC,IAAIF,GACZ7B,EAAS,CAACI,KAAK,2BAGMM,IAAjBQ,EAAUT,MAAoBS,EAAUZ,QAC9C0B,YAAMd,EAAUZ,QAAQC,SAAUW,EAAUZ,QAAQE,UAAUmB,MAAK,SAAAlB,GACjET,EAAS,CAACI,KAAK,gBAAiBK,YAC/BmB,OAAM,SAACK,GAAQ,IAADC,EAAAC,EACfnC,EAAS,CAACI,KAAK,iBACfmB,EAAsB,OAAdW,EAACD,EAAKG,WAAc,OAAND,EAAbD,EAAeD,WAAF,EAAbE,EAAqBE,YAG1BnB,EAAUT,MAA4B,OAApBS,EAAUZ,SAClCgC,YAAgBpB,EAAUT,KAAK8B,IAAIZ,MAAK,SAAAa,GACtCA,GAAQC,YAAepC,IAAC,GAAImC,GAAI,IAAEE,MAAM,MAAKf,MAAK,WAChDgB,cAAShB,MAAK,kBAAI3B,EAAS,CAACI,KAAK,8BAItC,CAACc,IACG0B,cAAC/C,EAAYgD,SAAQ,CAACC,MAAO,CAAC/C,OAAMuB,QAAOtB,YAAUa,SACzDA,KAIU,eAEb,OADoBkC,qBAAWlD,K,4LCrF1B,SAASmD,IACd,IAAA7B,EAAgCC,oBAAS,GAAMC,EAAAJ,IAAAE,EAAA,GAAxC8B,EAAQ5B,EAAA,GAAE6B,EAAW7B,EAAA,GAS5B,OARAI,qBAAU,WACHwB,GACHE,IAAaC,QAAQ,SAASzB,MAAK,SAAA0B,GACjCC,aAAWC,IAAI,CAACC,YAAgB,MAAHH,EAAS,gBAAiBA,IACvDH,GAAY,QAGf,CAACD,IACGA,EAGF,SAASQ,EAAeD,GAC7BL,IAAaO,QAAQ,QAAQF,GAAuB7B,MAAK,kBAAI2B,aAAWC,IAAI,CAACC,mBAGhE,SAASG,IACtB,IAAQC,EAASC,cAATD,KAER,OADoBpC,mBAAQ,kBAAKoC,EAAK,OAAO,UAAS,CAACA,M,01BCvBzD,IAAME,EAAW,SAAuDC,GACpE,IAAMC,EAAOC,IAAMC,MACf,kBAAM,oDAA6BvC,MAAK,SAAAwC,GACpC,MAAO,CAAEC,QAASD,EAAOJ,UAGjC,OAAO,SAACM,GACJ,OAAOzB,cAAC0B,WAAQ,CAACC,SAAU3B,cAAA4B,WAAA,IAAM3D,SAC7B+B,cAACoB,EAAI3D,EAAA,GAAKgE,QAKTI,EAAYX,EAAS,aACrBY,EAAWZ,EAAS,YACpBa,EAAcb,EAAS,eAGvBc,GAFgBd,EAAS,iBACVA,EAAS,gBACfA,EAAS,WAClBe,EAAkBf,EAAS,mBAC3BgB,EAAyBhB,EAAS,2B,+DCtBhC,eAEX,OADqBiB,MACAC,YAA6B,WAAfC,IAASC,IAAkC,OAAfD,IAASC,K,iJCHtEC,EAAmC,CACrCC,YACAC,iBAAiB,EACjBC,QAAS,IAEPC,EAASC,IAAMC,OAAON,GAE5BI,EAAOG,aAAapF,QAAQqF,KACxB,SAAAC,GACI,OAAOA,KAEX,SAAAtE,GACI,OAAOuE,QAAQC,OAAOxE,MAI9BiE,EAAOG,aAAatD,SAASuD,KACzB,SAAAvD,GAII,OAAOA,KAEX,SAAAd,GACI,OAA8B,MAA1BA,EAAMc,SAAS2D,OACRC,IAAWrE,KAAK,WAAD,IAAA7C,EAAAmH,KAAC,UAAMvD,GACzB,GAAIA,EAAM,CACN,IAAMwD,QAAUX,EAAOY,KAAK,4BAA6B,CAACzD,SAAQ,CAAC4C,QAAQ,CAAC,cAAgB,IAAKF,QAASgB,MAC1F,KAAZF,EAAEH,QAA4B,KAAXG,EAAEjE,MACrBoE,EAASH,EAAEjE,UAGtB,gBAAAqE,GAAA,OAAAxH,EAAAyH,MAAA,KAAAC,YAPsB,IAOpBC,SAAQ,WACP,OAAOZ,QAAQC,OAAOxE,MAGvBuE,QAAQC,OAAOxE,MAIvB,IAAM+E,EAAQ,eAAAK,EAAAT,KAAG,UAAOvD,GAC3B6C,EAAOoB,SAASrB,QAAuB,cAAC,OAAU5C,EAC9CA,QACMS,IAAaO,QAAQ,gBAAiBhB,GAE5CS,IAAayD,WAAW,oBAC/B,gBANoBC,GAAA,OAAAH,EAAAH,MAAA,KAAAC,YAAA,GAORR,EAAQ,eAAAc,EAAAb,KAAG,YACpB,IAAMvD,QAAcS,IAAaC,QAAQ,iBAEzC,OADAmC,EAAOoB,SAASrB,QAAuB,cAAI5C,EAAM,OAAOA,EAAQ,KACzDA,KACV,kBAJoB,OAAAoE,EAAAP,MAAA,KAAAC,YAAA,GAMNjB,O,4yBCnDA,WAAClB,GACZ,IAAMW,EAAW+B,cACjB5F,EAA4BC,mBAAS4F,OAAOC,YAAc,GAAE5F,EAAAJ,IAAAE,EAAA,GAArD+F,EAAM7F,EAAA,GAAE8F,EAAS9F,EAAA,GAWxB,OAVAI,qBAAU,WACN,GAAGuD,GAA2B,OAAfC,IAASC,GAAY,CAChC,IAAMkC,EAAW,SAACvF,GACdsF,EAAUH,OAAOC,YAAc,IAGnC,OADAI,IAAWC,iBAAiB,SAASF,GAC9B,kBAAMC,IAAWE,oBAAoB,SAAUH,OAG5D,CAAEpC,IACGpC,cAAC4E,IAAI,CAACC,MAAO,CAACP,OAAOlC,GAAyB,OAAfC,IAASC,GAAYgC,EAAO,QAAQrG,SACrEwD,EAAMxD,Y,yBCTT6G,EAAc,IAAIC,cAET,SAASC,IACtB,IAAMC,ECRO,WACb,IAAAC,EAAgD7D,YAAe,GAAM8D,EAAA9G,IAAA6G,EAAA,GAA9DD,EAAiBE,EAAA,GAAEC,EAAkBD,EAAA,GAyB5C,OAtBA9D,aAAgB,WAC0B,SAAAgE,IAgBvC,OAhBuCA,EAAAhC,KAAxC,YACE,IACEiC,YAGMC,IAAc9H,IAAC,GAChBqE,IAAS0D,MAAI,IAChB,aAAcvJ,EAAQ,QAExB,MAAOgD,GAEPC,QAAQuG,KAAKxG,GACd,QACCmG,GAAmB,GACnBE,WAEH3B,MAAA,KAAAC,YAjBoB,WACmByB,EAAA1B,MAAC,KAADC,WAkBxC8B,KACC,IAEIT,EDlBmBU,GACpBC,EAAuBxF,cACvByF,OAA8B/H,IAAnBsG,OAAO0B,UAAyB1B,OAAO0B,SAASC,SAASC,SAAS,WAC7EC,EAAa5E,IAAMC,MAAK,kBAAK,6EAC7B4E,EAAa7E,IAAMC,MAAK,kBAAK,uEACnC,OAAK2D,GAAsBW,EAIvB5F,cAACmG,IAAgB,CAAAlI,SACf+B,cAACoG,EAAkB,CAAAnI,SACf4H,EAYF7F,cAACqG,sBAAmB,CAACC,OAAQxB,EAAY7G,SACvC+B,cAACuG,IAAY,CAAAtI,SACX+B,cAAC0B,WAAQ,CAACC,SAAU3B,cAAA4B,WAAA,IAAM3D,SACxB+B,cAACkG,EAAU,UAfNlG,cAAChC,IAAY,CAAAC,SACtB+B,cAACqG,sBAAmB,CAACC,OAAQxB,EAAY7G,SACvCuI,eAACD,IAAY,CAAAtI,SAAA,CAGX+B,cAAC0B,WAAQ,CAACC,SAAU3B,cAAA4B,WAAA,IAAM3D,SACxB+B,cAACiG,EAAU,MAEbjG,cAACyG,IAAS,eAbf,MA8BV,SAASC,GACN,QAAU5I,IAAN4I,GAAmC,MAAhBA,EAAEC,OAAO,GAAa,CACzC,IAAIC,EAAUF,EAAEC,OAAOE,MAAM,GAAGC,MAAM,KAAKC,KAAI,SAASC,GACxD,OAAOA,EAAEC,QAAQ,SAAU,QACxBC,KAAK,KACR9C,OAAO+C,QAAQC,aAAa,KAAM,GAC9BV,EAAEX,SAASc,MAAM,GAAI,GAAKD,EAAUF,EAAEW,OANjD,CASCjD,OAAO0B,W,0DE1DTvE,EAAO+F,QAAU,IAA0B,iC,glHCE9B9D,EAAU,kCACVhB,EAAO,oCACpB+E,EAAyB,yBAAaT,MAAM,OAAMU,EAAAnJ,IAAAkJ,EAAA,GACrCE,GAA0B,SAD1BD,EAAA,GACkC,MAAM,MAAI,MADpCA,EAAA,GAERE,EAAoB,0FACpBC,EAAW,0CACXC,EAAW,0F,4uBCHXxI,EAAK,eAAAlD,EAAAmH,KAAG,UAAM1F,EAAiBC,GACrCD,EAASqI,SAAS,WAAgC,GAAnBpI,EAASiK,SACvCjK,EAAW,SACf,IAAM0F,QAAUV,IAAMW,KAAK,mBAAoB,CAAC5F,WAAUC,aAC1D,GAAe,KAAZ0F,EAAEH,OAED,aADMM,YAASH,EAAEjE,YACJP,OAEpB,gBARiB4E,EAAAO,GAAA,OAAA/H,EAAAyH,MAAA,KAAAC,YAAA,GAUL7D,EAAM,eAAA+D,EAAAT,KAAG,YAElB,aADMI,YAAS,YACFb,IAAMkF,IAAI,wBAC1B,kBAHkB,OAAAhE,EAAAH,MAAA,KAAAC,YAAA,GASbmE,GAJiB,eAAA7D,EAAAb,KAAI,YACvB,aAAajE,EAAM,QAAS,YADT,GAIF,eAAA4I,EAAA3E,KAAG,YAAW,IAAD4E,EACxB/H,EAAqD,OAAhD+H,QAAUrF,IAAMkF,IAAI,mCAA4B,EAA7CG,EAAgD5I,KAC9D,OAAIa,GAASA,EAAM2H,OACR3H,EAAM,GAEV,QACV,kBANoB,OAAA8H,EAAArE,MAAA,KAAAC,YAAA,IAQR9E,EAAU,eAAAoJ,EAAA7E,KAAG,YAEtB,GAAc,cADMD,eAEhB,OAAO,KACX,IACG,aAAa2E,IAEhB,MAAM9I,GACF,IAAIP,EAAQO,EACZ,QAAkBnB,IAAfmB,EAAEO,UAA6C,KAAnBP,EAAEO,SAAS2D,OACtC,IACI,aAAa4E,IAEjB,MAAMI,GACFzJ,EAAQyJ,EAGhB,IAAMC,EAAoC,eAAtB1J,EAAc2J,MAA0B3J,EAAce,SAAaf,EAAce,QAAmB6I,WAAW,eACnI,KAAM,CAAC5J,QAAO0J,iBAErB,kBApBsB,OAAAF,EAAAvE,MAAA,KAAAC,YAAA,GAsBV2E,EAAW,eAAAC,EAAAnF,KAAG,YACvB,MAAO,MACV,kBAFuB,OAAAmF,EAAA7E,MAAA,KAAAC,YAAA,GAIX6E,EAAQ,eAAAC,EAAArF,KAAG,UAAOxF,SACrB+E,IAAMW,KAAK,gBAAiB,CAC9BoF,SAAS9K,EAAK8K,SACdC,cAAe/K,EAAK+K,cACpBC,QAAShL,EAAKiL,SACdC,QAASlL,EAAKmL,SACdC,KAAMpL,EAAKoL,KACXrL,SAAUC,EAAKD,SACfD,SAAUE,EAAKF,UAChB,CAAC6E,iBACP,gBAVoB0G,GAAA,OAAAR,EAAA/E,MAAA,KAAAC,YAAA,GAYRuF,EAAS,eAAAC,EAAA/F,KAAG,UAAOxF,GAC5BqB,QAAQC,IAAItB,SACN+E,IAAMyG,MAAM,gBAAiB,CAACC,IAAI,CAACzL,EAAK8B,IAAK4J,QAAS,CACxDN,KAAKpL,EAAKoL,KACVF,QAAQlL,EAAKmL,SACbrL,SAASE,EAAKF,SACdC,SAASC,EAAKD,WACd,CAAC4E,iBACR,gBARqBgH,GAAA,OAAAJ,EAAAzF,MAAA,KAAAC,YAAA,GAUT6F,EAAU,eAAAC,EAAArG,KAAG,UAAOsG,SACvB/G,IAAMgH,OAAO,gBAAgBD,EAAM,IAAK,CAACnH,iBAClD,gBAFsBqH,GAAA,OAAAH,EAAA/F,MAAA,KAAAC,YAAA,GAIVkG,EAAmB,eAAAC,EAAA1G,KAAG,UAAO1F,GACtC,aAAciF,IAAMkF,IAAI,2BAA2BnK,IAAc0B,QACpE,gBAF+B2K,GAAA,OAAAD,EAAApG,MAAA,KAAAC,YAAA,G,ilBCjFzB,IAAMqG,EAAc,eAAA/N,EAAAmH,KAAG,UAAO7F,EAAa0M,GAC9C,YAAYpM,GAAToM,EACQjH,QAAQkH,QAAQ,aACbvH,IAAMkF,IAAI,oCAAoCtK,EAAI,sBAAsB0M,IAAa7K,QACtG,gBAJ0BqE,EAAAO,GAAA,OAAA/H,EAAAyH,MAAA,KAAAC,YAAA,GAMdwG,EAAW,eAAAtG,EAAAT,KAAG,UAAMgH,GAC7B,aAAczH,IAAMW,KAAK,oBAAqB8G,IAAUhL,QAC3D,gBAFuB6J,GAAA,OAAApF,EAAAH,MAAA,KAAAC,YAAA,GAIX0G,EAAiB,eAAApG,EAAAb,KAAG,UAAMgH,GACnC,aAAczH,IAAMW,KAAK,2BAA4B8G,IAAUhL,QAClE,gBAF6BmK,GAAA,OAAAtF,EAAAP,MAAA,KAAAC,YAAA,GAIjB2G,EAAU,eAAAvC,EAAA3E,KAAG,UAAMgH,GAC5B,aAAczH,IAAM4H,IAAI,oBAAoBH,EAAQ1K,GAAE,IAAK0K,IAAUhL,QACxE,gBAFsBwK,GAAA,OAAA7B,EAAArE,MAAA,KAAAC,YAAA,GAQV6G,GAJa,eAAAvC,EAAA7E,KAAG,UAAMqH,SACzB9H,IAAMgH,OAAO,oBAAoBc,EAAU,QAD3B,GAIS,eAAAlC,EAAAnF,KAAG,UAAMqH,GACxC,IACI,aAAc9H,IAAMkF,IAAI,qCAAqC4C,IAAgBrL,KAEjF,MAAMJ,GACF,GAAuB,KAAnBA,EAAEO,SAAS2D,QAAkC,KAAnBlE,EAAEO,SAAS2D,OACrC,OAAOF,QAAQkH,QAAQ,MAC3B,MAAMlL,MAEb,gBATkC0L,GAAA,OAAAnC,EAAA7E,MAAA,KAAAC,YAAA,IAWtBgH,EAAuB,eAAAlC,EAAArF,KAAG,UAAMhE,SACnCuD,IAAMW,KAAK,iCAAkC,CAAC8G,QAAQhL,EAAKqL,WAAYG,SAASxL,EAAKwL,cAC9F,gBAFmCC,GAAA,OAAApC,EAAA/E,MAAA,KAAAC,YAAA,GAIvBmH,EAAqB,eAAA3B,EAAA/F,KAAG,UAAM2H,SACjCpI,IAAMgH,OAAO,4BAA4BoB,EAAS,QAC3D,gBAFiCC,GAAA,OAAA7B,EAAAzF,MAAA,KAAAC,YAAA,GAIrBsH,EAAuB,eAAAxB,EAAArG,KAAG,UAAOqH,EAAmBS,EAAetF,GAC5E,IAAMuF,EAAcD,EAAM,UAAUA,EAAQ,GACtCE,EAAaxF,EAAS,UAAU,GACtC,aAAcjD,IAAMkF,IAAI,6BAA6BuD,EAAU,qBAAqBX,EAAaU,IAAgB/L,KAAKiM,WACzH,gBAJmCC,EAAAC,EAAAC,GAAA,OAAA/B,EAAA/F,MAAA,KAAAC,YAAA,GAMvB8H,EAA0B,eAAA3B,EAAA1G,KAAG,UAAOqH,EAAmBiB,GAChE,aAAc/I,IAAMkF,IAAI,sCAAsC4C,EAAU,kCAAkCiB,IAAgBtM,QAC7H,gBAFsCuM,EAAAC,GAAA,OAAA9B,EAAApG,MAAA,KAAAC,YAAA,GAI1BkI,EAA0B,eAAAC,EAAA1I,KAAG,UAAOqH,EAAmBsB,GAChE,aAAcpJ,IAAMkF,IAAI,sCAAsC4C,EAAU,aAAasB,IAAa3M,QACrG,gBAFsC4M,EAAAC,GAAA,OAAAH,EAAApI,MAAA,KAAAC,YAAA,GAI1BuI,EAAW,eAAAC,EAAA/I,KAAG,UAAO5D,EAAqB4M,GACnD,GAAI5M,EAAQ6M,KAAK,CACb,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQhN,EAAQ6M,MAChCjQ,OAAOqQ,QAAQjN,GAASkN,SAAQ,SAAAzM,GAC5BqM,EAASE,OAAOvM,EAAM,GAAG,GAAIA,EAAM,OAEvC,IAAM0M,EAAWnN,EAAQ6M,KAAKrD,WACxBrG,IAAMW,KAAK,sCAAuCgJ,EAAU,CAC9D7J,QAAOjF,IAAA,GACCmF,IAAMmB,SAASrB,SAAO,IAAU,eAAgB,wBAExDmK,iBAAiB,SAACC,GACN,MAART,KAAW,CAAChC,QAAQ5K,EAAQ4K,QAASuC,WAAUG,SAASD,EAAEE,QAAQF,EAAEG,OAAS,mBAK/ErK,IAAMW,KAAK,sCAAuC9D,MAE/D,gBApBuByN,EAAAC,GAAA,OAAAf,EAAAzI,MAAA,KAAAC,YAAA,GAsBXwJ,EAAqB,eAAAC,EAAAhK,KAAG,UAAOiK,GACxC,aAAc1K,IAAMyG,MAAM,6BAA6BiE,EAAQ3N,GAAE,IAAK2N,IAAUjO,QACnF,gBAFiCkO,GAAA,OAAAF,EAAA1J,MAAA,KAAAC,YAAA,I,uHC3E5B4J,EAActQ,wBAA2E,CAACJ,OAAO,OAAQ2Q,UAAU,eAE5GlH,EAAe,SAAHrK,GAA6C,IAAxC+B,EAAQ/B,EAAR+B,SAC5BM,EAAgCC,oBAAS,GAAMC,EAAAJ,IAAAE,EAAA,GAAxC8B,EAAQ5B,EAAA,GAAE6B,EAAW7B,EAAA,GAC5BiP,EAA4BlP,qBAAkBmP,EAAAtP,IAAAqP,EAAA,GAAvC5Q,EAAM6Q,EAAA,GAAEF,EAASE,EAAA,GAOxB,OANA9O,qBAAU,WACR0B,IAAaC,QAAQ,UAAUzB,MAAK,SAAA0B,GAClCgN,EAAUhN,GAAK,QACfH,GAAY,QAEb,IACID,EAASL,cAACwN,EAAYvN,SAAQ,CAACC,MAAO,CAACpD,SAAQ2Q,aAAWxP,SAC5DA,IACqB+B,cAAA4B,WAAA,KAOb,eACb,IAAAgM,EAA8BzN,qBAAWqN,GAAjC1Q,EAAM8Q,EAAN9Q,OAAQ2Q,EAASG,EAATH,UAChB,MAAO,CACLI,KAAK,SAAC1M,EAAa2M,GACjB,MAAc,MAAVhR,GAA8B,GAAZqE,EAAI0G,OACjB1G,OACKrD,GAAVhB,GAAgC,QAATA,EAClBf,IAAae,GAAgBqE,GAC/BxE,IACJoR,cAAc,CAAEpO,GAAIwB,EAAK6M,eAAgB7M,GAAO2M,GAChDG,YAELnR,SACA2Q,UAAW,SAAC3Q,GAAiByD,IAAaO,QAAQ,SAAUhE,GAAQiC,MAAK,kBAAI0O,EAAU3Q,U,kKCnC9E4C,EAAe,eAAAxD,EAAAmH,KAAG,UAAO6G,GAClC,IAAM7K,SAAcuD,IAAMkF,IAAI,wCAAwCoC,IAAa7K,KACnF,OAAOA,EAAKwI,OAAOxI,EAAK,QAAGvB,KAC9B,gBAH2B4F,GAAA,OAAAxH,EAAAyH,MAAA,KAAAC,YAAA,GAKfsK,EAAgB,eAAApK,EAAAT,KAAG,UAAM8K,GAClC,aAAcvL,IAAMW,KAAK,yBAA0B4K,IAAe9O,QACrE,gBAF4B4E,GAAA,OAAAH,EAAAH,MAAA,KAAAC,YAAA,GAIhB/D,EAAe,eAAAqE,EAAAb,KAAG,UAAM8K,GACjC,aAAcvL,IAAM4H,IAAI,yBAAyB2D,EAAaxO,GAAE,IAAKwO,IAAe9O,QACvF,gBAF2B6J,GAAA,OAAAhF,EAAAP,MAAA,KAAAC,YAAA,K","file":"static/js/app.55f3b2f5.chunk.js","sourcesContent":["import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nexport const translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\nexport default intl","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\r\nimport { checkLogin, login, logout } from \"../services\"\r\nimport { getNotification, putNotification } from \"../services/notification\"\r\nimport { User } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:User|null}\r\n\r\nexport type Auth = {user?:User|null, groupId?:number}\r\n\r\ntype AuthState ={user?:User|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const [error, setError] = useState<string>()\r\n  const auth = useMemo(()=>({\r\n    user:authState.user\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user!==undefined && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((data)=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n        setError(data.response?.data?.message)\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { useMemo, useEffect, useState } from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\nimport { Appearance, ColorSchemeName as UserColorSchemeName } from 'react-native-appearance';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\n\r\nexport function useInitColorScheme(){\r\n  const [complete, setComplete] = useState(false)\r\n  useEffect(()=>{\r\n    if (!complete){\r\n      AsyncStorage.getItem(\"color\").then(v=>{\r\n        Appearance.set({colorScheme:(v==null)?'no-preference':(v as any)})\r\n        setComplete(true)\r\n      })\r\n    }\r\n  }, [complete])\r\n  return complete\r\n}\r\n\r\nexport function setColorScheme(colorScheme:UserColorSchemeName){\r\n  AsyncStorage.setItem('color',colorScheme as string).then(()=>Appearance.set({colorScheme}))\r\n}\r\n\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  const { dark } = useTheme()\r\n  const colorScheme = useMemo(()=> dark?'dark':'light', [dark]) as NonNullable<ColorSchemeName>;\r\n  return colorScheme\r\n}\r\n","\r\n\r\n\r\n\r\nimport React, { Suspense } from \"react\";\r\n\r\nconst lazyIcon = <T extends keyof typeof import(\"@expo/vector-icons\"),>(key:T)=>{\r\n    const Icon = React.lazy(\r\n        () => import(\"@expo/vector-icons\").then(module => {\r\n            return { default: module[key] }\r\n        })\r\n    ) as typeof import(\"@expo/vector-icons\")[T]\r\n    return (props:React.ComponentProps<typeof Icon>)=>{\r\n        return <Suspense fallback={<></>}>\r\n            <Icon {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\nexport const AntDesign = lazyIcon('AntDesign');\r\nexport const Ionicons = lazyIcon('Ionicons');\r\nexport const FontAwesome = lazyIcon('FontAwesome');\r\nexport const MaterialIcons = lazyIcon('MaterialIcons');\r\nexport const FontAwesome5 = lazyIcon('FontAwesome5');\r\nexport const Entypo = lazyIcon('Entypo');\r\nexport const SimpleLineIcons = lazyIcon('SimpleLineIcons');\r\nexport const MaterialCommunityIcons = lazyIcon('MaterialCommunityIcons');","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import axios, { AxiosRequestConfig } from 'axios';\r\nimport {accountURL, baseURL} from \"../constants/Envs\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            return getToken().then(async(token)=>{\r\n                if (token){\r\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\r\n                    if (r.status == 200 && r.data !== ''){\r\n                        setToken(r.data)\r\n                    }\r\n                }\r\n            }).finally(()=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\n\r\nexport default (props:{children:React.ReactNode})=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import React, { Suspense } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\nimport { useInitColorScheme } from './src/hooks/useColorScheme';\r\nimport MobileSafeAreaView from './src/components/MobileSafeAreaView';\r\nimport { AuthProvider } from './src/hooks/useAuthContext';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { IntlProvider } from './src/hooks/useLangContext';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const isAppearenceComplete = useInitColorScheme()\r\n  const isViewer = window.location !==undefined && window.location.pathname.endsWith('/viewer')\r\n  const Navigation = React.lazy(()=> import('./src/navigation'))\r\n  const ChatViewer = React.lazy(()=> import('./src/navigation/ChatViewer'))\r\n  if (!isLoadingComplete || !isAppearenceComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <MobileSafeAreaView>\r\n          {!isViewer?<AuthProvider>\r\n            <QueryClientProvider client={queryClient}>\r\n              <IntlProvider>\r\n                {/* devtools */}\r\n                {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                <Suspense fallback={<></>}>\r\n                  <Navigation/>\r\n                </Suspense>\r\n                <StatusBar />\r\n              </IntlProvider>\r\n            </QueryClientProvider>\r\n          </AuthProvider>:\r\n          <QueryClientProvider client={queryClient}>\r\n            <IntlProvider>\r\n              <Suspense fallback={<></>}>\r\n                <ChatViewer/>\r\n              </Suspense>\r\n            </IntlProvider>\r\n          </QueryClientProvider>}\r\n        </MobileSafeAreaView>\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))","import { Ionicons } from '../lib/@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","// @ts-ignore\r\nimport {API_URL, FCM_PUBLIC_VAPID_KEY as fcm1, FCM_API_KEY as fcm2, TURN_SERVER as turn1 } from \"@env\"\r\nexport const accountURL =  `${API_URL}/account/`\r\nexport const baseURL =  `${API_URL}/messenger/`\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\nexport const websockerURL = `${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}`\r\nexport const FCM_PUBLIC_VAPID_KEY = fcm1\r\nexport const FCM_API_KEY = fcm2\r\nexport const TURN_SERVER = turn1","\r\nimport { CreateUser, User } from '../types';\r\nimport axios, { getToken, setToken } from './axios';\r\nimport {accountURL as baseURL} from '../constants/Envs'\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as User\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async ()=>{\r\n    return [] as User[]\r\n}\r\n\r\nexport const postUser = async (user:CreateUser)=>{\r\n    await axios.post(`/api/v1/user/`, {\r\n        imageUrl:user.imageUrl,\r\n        inviteGroupId: user.inviteGroupId,\r\n        isAdmin: user.is_staff,\r\n        isGuest: user.is_guest,\r\n        name: user.name,\r\n        password: user.password,\r\n        username: user.username\r\n    }, {baseURL})\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string, is_guest?:boolean, username?:string, password?:string})=>{\r\n    console.log(user)\r\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {\r\n        name:user.name, \r\n        isGuest:user.is_guest,\r\n        username:user.username,\r\n        password:user.password,\r\n    }}, {baseURL})\r\n}\r\n\r\nexport const deleteUser = async (userId:number)=>{\r\n    await axios.delete(`/api/v1/user/${userId}/`, {baseURL})\r\n}\r\n\r\nexport const getExternalUserList = async (username:string)=>{\r\n    return (await axios.get(`/api/v1/users/?username=${username}`) ).data as User[]\r\n}","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, EditMessengerContent } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getChannelList = async (type:string, user_id?:number)=>{\r\n    if(user_id==undefined)\r\n        return Promise.resolve(null)\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=${type}&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    try{\r\n        return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n    }\r\n    catch(e:any){\r\n        if (e.response.status==400 || e.response.status==403)\r\n            return Promise.resolve(null)\r\n        throw e\r\n    }\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number, isViewer?:boolean)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    const viewerPath = isViewer?'viewer/':''\r\n    return (await axios.get(`/api/v1/messengercontents/${viewerPath}?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const getNewMessengerContentList = async (channel_id:number, updated_gte:string)=>{\r\n    return (await axios.get(`/api/v1/messengercontents/?channel=${channel_id}&with_archive=true&updated_gte=${updated_gte}`)).data as MessengerContent[]\r\n}\r\n\r\nexport const getTimerMessageContentList = async (channel_id:number, timer_gt:string)=>{\r\n    return (await axios.get(`/api/v1/messengercontents/?channel=${channel_id}&timer_gt=${timer_gt}`)).data as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage, callback?:(args:{channel:number, filename:string, progress:number})=>void)=>{\r\n    if (message.file){\r\n        const formData = new FormData(); // formData 객체를 생성한다.\r\n        formData.append(\"file\", message.file)\r\n        Object.entries(message).forEach(value=>{\r\n            formData.append(value[0], `${value[1]}`)\r\n        })\r\n        const filename = message.file.name\r\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {\r\n            headers:{\r\n                ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n            onUploadProgress:(p)=>{\r\n                callback?.({channel:message.channel, filename, progress:p.loaded/(p.total || 1)})\r\n            }\r\n        })\r\n    }\r\n    else{\r\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n    }\r\n}\r\n\r\nexport const patchMessengerContent = async (content:EditMessengerContent)=>{\r\n    return (await axios.patch(`/api/v1/messengercontents/${content.id}/`, content)).data as MessengerContent\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { IntlShape } from \"@formatjs/intl\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport intl, { translations } from \"../lang\";\r\n\r\nconst IntlContext = createContext<{locale?:string, setLocale:(locale:string|undefined)=>void}>({locale:'auto', setLocale:()=>{}});\r\n\r\nexport const IntlProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [complete, setComplete] = useState(false)\r\n  const [locale, setLocale] = useState<string>()\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem(\"locale\").then(v=>{\r\n      setLocale(v || 'auto')\r\n      setComplete(true)\r\n    })\r\n  }, [])\r\n  return complete?<IntlContext.Provider value={{locale, setLocale}}>\r\n      {children}\r\n    </IntlContext.Provider>:<></>\r\n}\r\n\r\n\r\n\r\ntype TranslationParams = Parameters<IntlShape<string>[\"formatMessage\"]>[1];\r\n\r\nexport default ()=>{\r\n  const { locale, setLocale } = useContext(IntlContext)\r\n  return {\r\n    lang:(key: string, params?: TranslationParams) => {\r\n      if (locale == 'en' || key.length==0)\r\n        return key\r\n      if (locale != undefined && locale !='auto')\r\n        return translations[locale as 'ko'][key]\r\n      return intl\r\n        .formatMessage({ id: key, defaultMessage: key }, params)\r\n        .toString()\r\n    },\r\n    locale,\r\n    setLocale: (locale:string)=>{AsyncStorage.setItem('locale', locale).then(()=>setLocale(locale))}\r\n  }\r\n}\r\n","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}"],"sourceRoot":""}