{"version":3,"sources":["src/services/notification.ts","src/lang/index.ts","src/hooks/useAuthContext.tsx","src/hooks/useColorScheme.ts","src/lib/@expo/vector-icons.tsx","src/hooks/useIsMobile.ts","src/components/MobileSafeAreaView.tsx","App.tsx","src/hooks/useCachedResources.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/services/axios.ts","src/services/messenger.ts","src/services/account.ts","src/constants/Envs.ts","src/hooks/useLangContext.tsx"],"names":["getNotification","_ref","_asyncToGenerator","user_id","data","axios","get","length","undefined","_x","apply","arguments","postNotification","_ref2","notification","post","_x2","putNotification","_ref3","put","id","_x3","translations","ko","require","_RNLocalize$findBestL","RNLocalize","Object","keys","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","AuthContext","createContext","auth","dispatch","authReducer","initialState","action","type","_objectSpread","request","username","password","user","Error","AuthProvider","children","_useReducer","useReducer","_useReducer2","_slicedToArray","authState","_useState","useState","_useState2","error","setError","useMemo","useEffect","checkLogin","then","catch","e","console","log","login","_data$response","_data$response$data","response","message","noti","token","logout","_jsx","Provider","value","useContext","useInitColorScheme","complete","setComplete","AsyncStorage","getItem","v","Appearance","set","colorScheme","setColorScheme","setItem","useColorScheme","dark","useTheme","lazyIcon","key","Icon","React","lazy","module","default","props","Suspense","fallback","_Fragment","AntDesign","Ionicons","FontAwesome","Entypo","SimpleLineIcons","MaterialCommunityIcons","useMobileDetect","isMobile","Platform","OS","useIsMobile","window","innerHeight","height","setHeight","onChange","Dimensions","addEventListener","removeEventListener","View","style","queryClient","QueryClient","App","isLoadingComplete","_React$useState","_React$useState2","setLoadingComplete","_loadResourcesAndDataAsync","SplashScreen","Font","font","warn","loadResourcesAndDataAsync","useCachedResources","isAppearenceComplete","isViewer","location","pathname","endsWith","Navigation","ChatViewer","SafeAreaProvider","MobileSafeAreaView","QueryClientProvider","client","IntlProvider","_jsxs","StatusBar","l","search","decoded","slice","split","map","s","replace","join","history","replaceState","hash","exports","needRefresh","config","url","responseURL","status","allAxios","axiosCreate","baseURL","defaultOption","withCredentials","headers","_axios","create","interceptors","use","refreshToken","Promise","reject","push","account","accountURL","getToken","_ref4","r","Authorization","setToken","_ref5","forEach","defaults","removeItem","_x4","_ref6","getChannelList","resolve","postChannel","channel","postDirectChannel","putChannel","_x5","getPeopleList","channel_id","delete","_x7","getMessengerMemberList","_ref7","_x8","postBulkMessengerMember","_ref8","user_ids","_x9","deleteMessengerMember","_ref9","member_id","_x10","getMessengerContentList","_ref10","id_lt","id_lt_param","viewerPath","results","_x11","_x12","_x13","getNewMessengerContentList","_ref11","updated_gte","_x14","_x15","getTimerMessageContentList","_ref12","timer_gt","_x16","_x17","postMessage","_ref13","callback","file","formData","FormData","append","entries","filename","name","onUploadProgress","p","progress","loaded","total","_x18","_x19","patchMessengerContent","_ref14","content","patch","_x20","checkLoginToken","_yield$account$get","_yield$account$get$da","e2","isOffline","code","startsWith","postUser","imageUrl","isAdmin","is_staff","isGuest","is_guest","patchUser","ids","updated","deleteUser","userId","getExternalUserList","_x6","getExternalUser","_split","_split2","websockerURL","FCM_PUBLIC_VAPID_KEY","FCM_API_KEY","TURN_SERVER","IntlContext","setLocale","_useState3","_useState4","_useContext","lang","params","formatMessage","defaultMessage","toString"],"mappings":"wNAGaA,EAAe,eAAAC,EAAAC,KAAG,UAAOC,GAClC,IAAMC,SAAcC,IAAMC,IAAI,wCAAwCH,IAAaC,KACnF,OAAOA,EAAKG,OAAOH,EAAK,QAAGI,KAC9B,gBAH2BC,GAAA,OAAAR,EAAAS,MAAA,KAAAC,YAAA,GAKfC,EAAgB,eAAAC,EAAAX,KAAG,UAAMY,GAClC,aAAcT,IAAMU,KAAK,yBAA0BD,IAAeV,QACrE,gBAF4BY,GAAA,OAAAH,EAAAH,MAAA,KAAAC,YAAA,GAIhBM,EAAe,eAAAC,EAAAhB,KAAG,UAAMY,GACjC,aAAcT,IAAMc,IAAI,yBAAyBL,EAAaM,GAAE,IAAKN,IAAeV,QACvF,gBAF2BiB,GAAA,OAAAH,EAAAR,MAAA,KAAAC,YAAA,I,4GCRfW,EAAe,CAC1BC,GAAIC,EAAQ,MAQdvB,EAC2D,OAD3DwB,EACEC,sBAA+BC,OAAOC,KAAKN,KAAcG,EAH1C,CAAEI,YAAa,KAAMC,OAAO,GAErCD,EAAW5B,EAAX4B,YAAaC,EAAK7B,EAAL6B,MAIrBC,IAAYC,SAASF,GAGrB,IAAMG,EAAOC,YACX,CACEC,cAAe,KACfC,OAAQP,EACRQ,SAAUf,EAAaO,IAEzBS,eAGaL,O,ysBClBf,IAAMM,EAAcC,wBAAyE,CAACC,KAAK,GAAIC,SAAS,eAE1GC,EAAa,SAACC,EAAwBC,GAC1C,OAAQA,EAAOC,MACX,IAAK,gBACH,OAAAC,IAAA,GACKH,GAAY,IACfI,QAAQ,CAACC,SAASJ,EAAOI,SAAUC,SAASL,EAAOK,YAEvD,IAAK,cACH,OAAAH,IAAA,GACKH,GAAY,IACfI,QAAQ,CAACC,SAAS,QAASC,SAAS,WAExC,IAAK,gBACD,OAAAH,IAAA,GACOH,GAAY,IACfO,KAAKN,EAAOM,KACZH,aAAQxC,IAEhB,IAAK,eACD,OAAAuC,IAAA,GACOH,GAAY,IACfI,aAAQxC,IAEhB,IAAK,iBACD,OAAAuC,IAAA,GACOH,GAAY,IACfI,QAAQ,OAEhB,IAAK,iBACD,OAAAD,IAAA,GACKH,GAAY,IACfO,KAAK,KACLH,aAAQxC,IAEd,IAAK,UACH,OAAAuC,IAAA,GACKH,GAAY,IACfO,UAAK3C,IAET,QACI,MAAM,IAAI4C,MAAM,0BAA2BP,EAAOC,QAK/CO,EAAe,SAAHpD,GAA6C,IAAxCqD,EAAQrD,EAARqD,SAC5BC,EAA8BC,qBAAWb,EAAa,IAAWc,EAAAC,IAAAH,EAAA,GAA1DI,EAASF,EAAA,GAAEf,EAAQe,EAAA,GAC1BG,EAA0BC,qBAAkBC,EAAAJ,IAAAE,EAAA,GAArCG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBrB,EAAOwB,mBAAQ,iBAAK,CACxBd,KAAKQ,EAAUR,QACb,CAACQ,IA0BL,OAzBAO,qBAAU,gBACY1D,IAAjBmD,EAAUR,KACXgB,cAAaC,MAAK,SAACjB,GACjBT,EAAS,CAACI,KAAK,gBAAiBK,YAC/BkB,OAAM,SAACC,GACRC,QAAQC,IAAIF,GACZ5B,EAAS,CAACI,KAAK,2BAGMtC,IAAjBmD,EAAUR,MAAoBQ,EAAUX,QAC9CyB,YAAMd,EAAUX,QAAQC,SAAUU,EAAUX,QAAQE,UAAUkB,MAAK,SAAAjB,GACjET,EAAS,CAACI,KAAK,gBAAiBK,YAC/BkB,OAAM,SAACjE,GAAQ,IAADsE,EAAAC,EACfjC,EAAS,CAACI,KAAK,iBACfkB,EAAsB,OAAdU,EAACtE,EAAKwE,WAAc,OAAND,EAAbD,EAAetE,WAAF,EAAbuE,EAAqBE,YAG1BlB,EAAUR,MAA4B,OAApBQ,EAAUX,SAClChD,YAAgB2D,EAAUR,KAAK/B,IAAIgD,MAAK,SAAAU,GACtCA,GAAQ7D,YAAe8B,IAAC,GAAI+B,GAAI,IAAEC,MAAM,MAAKX,MAAK,WAChDY,cAASZ,MAAK,kBAAI1B,EAAS,CAACI,KAAK,8BAItC,CAACa,IACGsB,cAAC1C,EAAY2C,SAAQ,CAACC,MAAO,CAAC1C,OAAMsB,QAAOrB,YAAUY,SACzDA,KAIU,eAEb,OADoB8B,qBAAW7C,K,4LCrF1B,SAAS8C,IACd,IAAAzB,EAAgCC,oBAAS,GAAMC,EAAAJ,IAAAE,EAAA,GAAxC0B,EAAQxB,EAAA,GAAEyB,EAAWzB,EAAA,GAS5B,OARAI,qBAAU,WACHoB,GACHE,IAAaC,QAAQ,SAASrB,MAAK,SAAAsB,GACjCC,aAAWC,IAAI,CAACC,YAAgB,MAAHH,EAAS,gBAAiBA,IACvDH,GAAY,QAGf,CAACD,IACGA,EAGF,SAASQ,EAAeD,GAC7BL,IAAaO,QAAQ,QAAQF,GAAuBzB,MAAK,kBAAIuB,aAAWC,IAAI,CAACC,mBAGhE,SAASG,IACtB,IAAQC,EAASC,cAATD,KAER,OADoBhC,mBAAQ,kBAAKgC,EAAK,OAAO,UAAS,CAACA,M,01BCvBzD,IAAME,EAAW,SAAuDC,GACpE,IAAMC,EAAOC,IAAMC,MACf,kBAAM,oDAA6BnC,MAAK,SAAAoC,GACpC,MAAO,CAAEC,QAASD,EAAOJ,UAGjC,OAAO,SAACM,GACJ,OAAOzB,cAAC0B,WAAQ,CAACC,SAAU3B,cAAA4B,WAAA,IAAMvD,SAC7B2B,cAACoB,EAAItD,EAAA,GAAK2D,QAKTI,EAAYX,EAAS,aACrBY,EAAWZ,EAAS,YACpBa,EAAcb,EAAS,eAGvBc,GAFgBd,EAAS,iBACVA,EAAS,gBACfA,EAAS,WAClBe,EAAkBf,EAAS,mBAC3BgB,EAAyBhB,EAAS,2B,+DCtBhC,eAEX,OADqBiB,MACAC,YAA6B,WAAfC,IAASC,IAAkC,OAAfD,IAASC,K,4yBCD7D,WAACb,GACZ,IAAMW,EAAWG,cACjB5D,EAA4BC,mBAAS4D,OAAOC,YAAc,GAAE5D,EAAAJ,IAAAE,EAAA,GAArD+D,EAAM7D,EAAA,GAAE8D,EAAS9D,EAAA,GAWxB,OAVAI,qBAAU,WACN,GAAGmD,GAA2B,OAAfC,IAASC,GAAY,CAChC,IAAMM,EAAW,SAACvD,GACdsD,EAAUH,OAAOC,YAAc,IAGnC,OADAI,IAAWC,iBAAiB,SAASF,GAC9B,kBAAMC,IAAWE,oBAAoB,SAAUH,OAG5D,CAAER,IACGpC,cAACgD,IAAI,CAACC,MAAO,CAACP,OAAON,GAAyB,OAAfC,IAASC,GAAYI,EAAO,QAAQrE,SACrEoD,EAAMpD,Y,yBCTT6E,EAAc,IAAIC,cAET,SAASC,IACtB,IAAMC,ECRO,WACb,IAAAC,EAAgDjC,YAAe,GAAMkC,EAAA9E,IAAA6E,EAAA,GAA9DD,EAAiBE,EAAA,GAAEC,EAAkBD,EAAA,GAyB5C,OAtBAlC,aAAgB,WAC0B,SAAAoC,IAgBvC,OAhBuCA,EAAAxI,KAAxC,YACE,IACEyI,YAGMC,IAAc7F,IAAC,GAChBgE,IAAS8B,MAAI,IAChB,aAAcrH,EAAQ,QAExB,MAAO8C,GAEPC,QAAQuE,KAAKxE,GACd,QACCmE,GAAmB,GACnBE,WAEHjI,MAAA,KAAAC,YAjBoB,WACmB+H,EAAAhI,MAAC,KAADC,WAkBxCoI,KACC,IAEIT,EDlBmBU,GACpBC,EAAuB5D,cACvB6D,OAA8B1I,IAAnBiH,OAAO0B,UAAyB1B,OAAO0B,SAASC,SAASC,SAAS,WAC7EC,EAAahD,IAAMC,MAAK,kBAAK,8DAC7BgD,EAAajD,IAAMC,MAAK,kBAAK,uEACnC,OAAK+B,GAAsBW,EAIvBhE,cAACuE,IAAgB,CAAAlG,SACf2B,cAACwE,EAAkB,CAAAnG,SACf4F,EAYFjE,cAACyE,sBAAmB,CAACC,OAAQxB,EAAY7E,SACvC2B,cAAC2E,IAAY,CAAAtG,SACX2B,cAAC0B,WAAQ,CAACC,SAAU3B,cAAA4B,WAAA,IAAMvD,SACxB2B,cAACsE,EAAU,UAfNtE,cAAC5B,IAAY,CAAAC,SACtB2B,cAACyE,sBAAmB,CAACC,OAAQxB,EAAY7E,SACvCuG,eAACD,IAAY,CAAAtG,SAAA,CAGX2B,cAAC0B,WAAQ,CAACC,SAAU3B,cAAA4B,WAAA,IAAMvD,SACxB2B,cAACqE,EAAU,MAEbrE,cAAC6E,IAAS,eAbf,MA8BV,SAASC,GACN,QAAUvJ,IAANuJ,GAAmC,MAAhBA,EAAEC,OAAO,GAAa,CACzC,IAAIC,EAAUF,EAAEC,OAAOE,MAAM,GAAGC,MAAM,KAAKC,KAAI,SAASC,GACxD,OAAOA,EAAEC,QAAQ,SAAU,QACxBC,KAAK,KACR9C,OAAO+C,QAAQC,aAAa,KAAM,GAC9BV,EAAEX,SAASc,MAAM,GAAI,GAAKD,EAAUF,EAAEW,OANjD,CASCjD,OAAO0B,W,0DE1DT3C,EAAOmE,QAAU,IAA0B,iC,2pHCK9BC,EAAc,SAAChG,GACxB,MAC2B,4BAAxBA,EAASiG,OAAOC,KACflG,EAAS5B,QAAQ+H,YAAY1B,SAAS,kBACpB,MAApBzE,EAASoG,QAIPC,EAA4B,GAErBC,EAAc,SAACC,GAC1B,IAAMC,EAAoC,CACxCD,UACAE,iBAAiB,EACjBC,QAAS,IAELC,EAASlL,IAAMmL,OAAOJ,GAkB5B,OAjBAG,EAAOE,aAAa7G,SAAS8G,IAAI,WAAD,IAAAzL,EAAAC,KAC9B,UAAO0E,GACL,GAAIgG,EAAYhG,GAGd,YAFM+G,IAEA,CAAE/G,YAEV,OAAOA,KACR,gBAAAnE,GAAA,OAAAR,EAAAS,MAAA,KAAAC,YAR8B,GAQ9B,eAAAE,EAAAX,KACD,UAAO6D,GAIL,OAHI6G,EAAY7G,EAAMa,WAAuC,MAA1Bb,EAAMa,SAASoG,gBAC1CW,KAEDC,QAAQC,OAAO9H,MACvB,gBAAA/C,GAAA,OAAAH,EAAAH,MAAA,KAAAC,YANA,IAQHsK,EAASa,KAAKP,GACPA,GAGHQ,EAAUb,EAAYc,KAEtBL,EAAY,eAAAzK,EAAAhB,KAAG,YACnB,OAAO+L,IAAW7H,KAAK,WAAD,IAAA8H,EAAAhM,KAAC,UAAO6E,GAC5B,GAAIA,EAAO,CACT,IAAMoH,QAAUJ,EAAQhL,KACtB,8BACA,CAAEgE,SACF,CAAEuG,QAAS,CAAEc,cAAe,MAEb,MAAbD,EAAEnB,QAA6B,KAAXmB,EAAE/L,aAClBiM,EAASF,EAAE/L,WAGpB,OAAF,SAAAiB,GAAA,OAAA6K,EAAAxL,MAAA,KAAAC,YAXsB,OAYxB,kBAbiB,OAAAO,EAAAR,MAAA,KAAAC,YAAA,GAeL0L,EAAQ,eAAAC,EAAApM,KAAG,UAAO6E,GAC7BkG,EAASsB,SAAQ,SAAChB,GAChBA,EAAOiB,SAASlB,QAAuB,cAAC,OAAUvG,KAEhDA,QAAaS,IAAaO,QAAQ,gBAAiBhB,GAClDS,IAAaiH,WAAW,oBAC9B,gBANoBC,GAAA,OAAAJ,EAAA5L,MAAA,KAAAC,YAAA,GAQRsL,EAAQ,eAAAU,EAAAzM,KAAG,YACtB,IAAM6E,QAAcS,IAAaC,QAAQ,iBAIzC,OAHAwF,EAASsB,SAAQ,SAAChB,GAChBA,EAAOiB,SAASlB,QAAuB,cAAIvG,EAAK,OAAUA,EAAU,QAE/DA,KACR,kBANoB,OAAA4H,EAAAjM,MAAA,KAAAC,YAAA,GAQNoL,O,+kCCvEjB,IAAM1L,EAAQ6K,YAAYC,KAEbyB,EAAc,eAAA3M,EAAAC,KAAG,UAAO4C,EAAsB3C,GACvD,YAAYK,GAATL,EACQyL,QAAQiB,QAAQ,MAChB,WAAP/J,SACczC,EAAMC,IAAI,oCAAoCwC,EAAI,UAAU3C,IAAaC,KACjF,cAAP0C,SACezC,EAAMC,IAAI,oCAAoCwC,EAAI,sBAAsB3C,IAAaC,KAChGwL,QAAQiB,QAAQ,SAC1B,gBAR0BpM,EAAAO,GAAA,OAAAf,EAAAS,MAAA,KAAAC,YAAA,GAUdmM,EAAW,eAAAjM,EAAAX,KAAG,UAAM6M,GAC7B,aAAc1M,EAAMU,KAAK,oBAAqBgM,IAAU3M,QAC3D,gBAFuBiB,GAAA,OAAAR,EAAAH,MAAA,KAAAC,YAAA,GAIXqM,EAAiB,eAAA9L,EAAAhB,KAAG,UAAM6M,GACnC,aAAc1M,EAAMU,KAAK,2BAA4BgM,IAAU3M,QAClE,gBAF6BsM,GAAA,OAAAxL,EAAAR,MAAA,KAAAC,YAAA,GAIjBsM,EAAU,eAAAf,EAAAhM,KAAG,UAAM6M,GAC5B,aAAc1M,EAAMc,IAAI,oBAAoB4L,EAAQ3L,GAAE,IAAK2L,IAAU3M,QACxE,gBAFsB8M,GAAA,OAAAhB,EAAAxL,MAAA,KAAAC,YAAA,GASVwM,GALa,eAAAb,EAAApM,KAAG,UAAMkN,SACzB/M,EAAMgN,OAAO,oBAAoBD,EAAU,QAD3B,GAKA,eAAAT,EAAAzM,KAAG,UAAMkN,GAC/B,IACI,aAAc/M,EAAMC,IAAI,0CAA0C8M,IAAgBhN,KAEtF,MAAMkE,GACF,GAAuB,KAAnBA,EAAEM,SAASoG,QAAkC,KAAnB1G,EAAEM,SAASoG,OACrC,OAAOY,QAAQiB,QAAQ,MAC3B,MAAMvI,MAEb,gBATyBgJ,GAAA,OAAAX,EAAAjM,MAAA,KAAAC,YAAA,IAYb4M,EAAsB,eAAAC,EAAAtN,KAAG,UAAMkN,GACxC,IACI,aAAc/M,EAAMC,IAAI,qCAAqC8M,IAAgBhN,KAEjF,MAAMkE,GACF,GAAuB,KAAnBA,EAAEM,SAASoG,QAAkC,KAAnB1G,EAAEM,SAASoG,OACrC,OAAOY,QAAQiB,QAAQ,MAC3B,MAAMvI,MAEb,gBATkCmJ,GAAA,OAAAD,EAAA9M,MAAA,KAAAC,YAAA,GAWtB+M,EAAuB,eAAAC,EAAAzN,KAAG,UAAME,SACnCC,EAAMU,KAAK,iCAAkC,CAACgM,QAAQ3M,EAAKgN,WAAYQ,SAASxN,EAAKwN,cAC9F,gBAFmCC,GAAA,OAAAF,EAAAjN,MAAA,KAAAC,YAAA,GAIvBmN,EAAqB,eAAAC,EAAA7N,KAAG,UAAM8N,SACjC3N,EAAMgN,OAAO,4BAA4BW,EAAS,QAC3D,gBAFiCC,GAAA,OAAAF,EAAArN,MAAA,KAAAC,YAAA,GAIrBuN,EAAuB,eAAAC,EAAAjO,KAAG,UAAOkN,EAAmBgB,EAAelF,GAC5E,IAAMmF,EAAcD,EAAM,UAAUA,EAAQ,GACtCE,EAAapF,EAAS,UAAU,GACtC,aAAc7I,EAAMC,IAAI,6BAA6BgO,EAAU,qBAAqBlB,EAAaiB,IAAgBjO,KAAKmO,WACzH,gBAJmCC,EAAAC,EAAAC,GAAA,OAAAP,EAAAzN,MAAA,KAAAC,YAAA,GAMvBgO,EAA0B,eAAAC,EAAA1O,KAAG,UAAOkN,EAAmByB,GAChE,aAAcxO,EAAMC,IAAI,sCAAsC8M,EAAU,kCAAkCyB,IAAgBzO,QAC7H,gBAFsC0O,EAAAC,GAAA,OAAAH,EAAAlO,MAAA,KAAAC,YAAA,GAI1BqO,EAA0B,eAAAC,EAAA/O,KAAG,UAAOkN,EAAmB8B,GAChE,aAAc7O,EAAMC,IAAI,sCAAsC8M,EAAU,aAAa8B,IAAa9O,QACrG,gBAFsC+O,EAAAC,GAAA,OAAAH,EAAAvO,MAAA,KAAAC,YAAA,GAI1B0O,EAAW,eAAAC,EAAApP,KAAG,UAAO2E,EAAqB0K,GACnD,GAAI1K,EAAQ2K,KAAK,CACb,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ9K,EAAQ2K,MAChC7N,OAAOiO,QAAQ/K,GAAS0H,SAAQ,SAAApH,GAC5BsK,EAASE,OAAOxK,EAAM,GAAG,GAAIA,EAAM,OAEvC,IAAM0K,EAAWhL,EAAQ2K,KAAKM,WACxBzP,EAAMU,KAAK,sCAAuC0O,EAAU,CAC9DnE,QAAOvI,IAAA,GACC1C,EAAMmM,SAASlB,SAAO,IAAU,eAAgB,wBAExDyE,iBAAiB,SAACC,GACN,MAART,KAAW,CAACxC,QAAQlI,EAAQkI,QAAS8C,WAAUI,SAASD,EAAEE,QAAQF,EAAEG,OAAS,mBAK/E9P,EAAMU,KAAK,sCAAuC8D,MAE/D,gBApBuBuL,EAAAC,GAAA,OAAAf,EAAA5O,MAAA,KAAAC,YAAA,GAsBX2P,EAAqB,eAAAC,EAAArQ,KAAG,UAAOsQ,GACxC,aAAcnQ,EAAMoQ,MAAM,6BAA6BD,EAAQpP,GAAE,IAAKoP,IAAUpQ,QACnF,gBAFiCsQ,GAAA,OAAAH,EAAA7P,MAAA,KAAAC,YAAA,GAKnBN,O,wyBCpGFoE,EAAK,eAAAxE,EAAAC,KAAG,UAAM+C,EAAiBC,GACrCD,EAASoG,SAAS,WAAgC,GAAnBnG,EAAS3C,SACvC2C,EAAW,SACf,IAAMuM,EAAW,IAAIC,SACrBD,EAASE,OAAO,WAAY1M,GAC5BwM,EAASE,OAAO,WAAYzM,GAC5B,IAAMiJ,QAAUJ,IAAQhL,KAAK,SAAU0O,GACjC1K,EAAeoH,EAAEb,QAAuB,cAC9C,GAAe,KAAZa,EAAEnB,QAAiBjG,EAElB,aADMsH,YAAStH,EAAMoF,MAAM,KAAK,UACnBhG,OAEpB,gBAZiB1D,EAAAO,GAAA,OAAAf,EAAAS,MAAA,KAAAC,YAAA,GAcLqE,EAAM,eAAAnE,EAAAX,KAAG,YAElB,aADMmM,YAAS,YACFN,IAAQzL,IAAI,cAC5B,kBAHkB,OAAAO,EAAAH,MAAA,KAAAC,YAAA,GASbgQ,GAJiB,eAAAzP,EAAAhB,KAAI,YACvB,aAAauE,EAAM,QAAS,YADT,GAIF,eAAAyH,EAAAhM,KAAG,YAAa,IAAD0Q,EAAAC,EAC1B1L,EAAqD,OAAhDyL,QAAU7E,IAAQzL,IAAI,6BAAiC,OAAPuQ,EAA7CD,EAAgDxQ,WAAH,EAA7CyQ,EAAsD1L,MACpE,OAAIA,EACKA,EAAM,GAER,QACR,kBANkB,OAAA+G,EAAAxL,MAAA,KAAAC,YAAA,IAQRwD,EAAU,eAAAmI,EAAApM,KAAG,YAEtB,GAAc,cADM+L,eAEhB,OAAO,KACX,IACG,aAAa0E,IAEhB,MAAMrM,GACF,IAAIP,EAAQO,EACZ,GAAGsG,YAAYtG,EAAEM,UACb,IACI,aAAa+L,IAEjB,MAAMG,GACF/M,EAAQ+M,EAGhB,IAAMC,EAAoC,eAAtBhN,EAAciN,MAA0BjN,EAAcc,SAAad,EAAcc,QAAmBoM,WAAW,eACnI,KAAM,CAAClN,QAAOgN,iBAErB,kBApBsB,OAAAzE,EAAA5L,MAAA,KAAAC,YAAA,GAsBVuQ,EAAQ,eAAAvE,EAAAzM,KAAG,UAAOiD,SACrB4I,IAAQhL,KAAK,gBAAiB,CAChCoQ,SAAShO,EAAKgO,SACdC,QAASjO,EAAKkO,SACdC,QAASnO,EAAKoO,SACdzB,KAAM3M,EAAK2M,KACX5M,SAAUC,EAAKD,SACfD,SAAUE,EAAKF,cAEtB,gBAToB5B,GAAA,OAAAsL,EAAAjM,MAAA,KAAAC,YAAA,GAWR6Q,EAAS,eAAAhE,EAAAtN,KAAG,UAAOiD,SACtB4I,IAAQ0E,MAAM,gBAAiB,CAACgB,IAAI,CAACtO,EAAK/B,IAAKsQ,QAAS,CAC1D5B,KAAK3M,EAAK2M,KACVwB,QAAQnO,EAAKoO,SACbtO,SAASE,EAAKF,SACdC,SAASC,EAAKD,eAErB,gBAPqBwJ,GAAA,OAAAc,EAAA9M,MAAA,KAAAC,YAAA,GASTgR,EAAU,eAAAhE,EAAAzN,KAAG,UAAO0R,SACvB7F,IAAQsB,OAAO,gBAAgBuE,EAAM,QAC9C,gBAFsB1E,GAAA,OAAAS,EAAAjN,MAAA,KAAAC,YAAA,GAIVkR,EAAmB,eAAA9D,EAAA7N,KAAG,UAAO+C,GACtC,aAAc5C,IAAMC,IAAI,2BAA2B2C,IAAc7C,QACpE,gBAF+B0R,GAAA,OAAA/D,EAAArN,MAAA,KAAAC,YAAA,GAInBoR,EAAe,eAAA5D,EAAAjO,KAAG,UAAOkB,GAClC,aAAcf,IAAMC,IAAI,iBAAiBc,EAAE,MAAOhB,QACrD,gBAF2BkN,GAAA,OAAAa,EAAAzN,MAAA,KAAAC,YAAA,I,iQCpFfqL,EAAU,kCACVb,EAAO,oCACpB6G,EAAyB,yBAAa7H,MAAM,OAAM8H,EAAAvO,IAAAsO,EAAA,GACrCE,GAA0B,SAD1BD,EAAA,GACkC,MAAM,MAAI,MADpCA,EAAA,GAERE,EAAoB,0FACpBC,EAAW,0CACXC,EAAW,0F,uHCHlBC,EAAc9P,wBAA2E,CAACJ,OAAO,OAAQmQ,UAAU,eAE5G3I,EAAe,SAAH3J,GAA6C,IAAxCqD,EAAQrD,EAARqD,SAC5BM,EAAgCC,oBAAS,GAAMC,EAAAJ,IAAAE,EAAA,GAAxC0B,EAAQxB,EAAA,GAAEyB,EAAWzB,EAAA,GAC5B0O,EAA4B3O,qBAAkB4O,EAAA/O,IAAA8O,EAAA,GAAvCpQ,EAAMqQ,EAAA,GAAEF,EAASE,EAAA,GAOxB,OANAvO,qBAAU,WACRsB,IAAaC,QAAQ,UAAUrB,MAAK,SAAAsB,GAClC6M,EAAU7M,GAAK,QACfH,GAAY,QAEb,IACID,EAASL,cAACqN,EAAYpN,SAAQ,CAACC,MAAO,CAAC/C,SAAQmQ,aAAWjP,SAC5DA,IACqB2B,cAAA4B,WAAA,KAOb,eACb,IAAA6L,EAA8BtN,qBAAWkN,GAAjClQ,EAAMsQ,EAANtQ,OAAQmQ,EAASG,EAATH,UAChB,MAAO,CACLI,KAAK,SAACvM,EAAawM,GACjB,MAAc,MAAVxQ,GAA8B,GAAZgE,EAAI7F,OACjB6F,OACK5F,GAAV4B,GAAgC,QAATA,EAClBd,IAAac,GAAgBgE,GAC/BnE,IACJ4Q,cAAc,CAAEzR,GAAIgF,EAAK0M,eAAgB1M,GAAOwM,GAChDG,YAEL3Q,SACAmQ,UAAW,SAACnQ,GAAiBoD,IAAaO,QAAQ,SAAU3D,GAAQgC,MAAK,kBAAImO,EAAUnQ,W","file":"static/js/app.b272ff44.chunk.js","sourcesContent":["import { Notification } from '../types';\r\nimport axios from './messenger';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}","import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nexport const translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\nexport default intl","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\r\nimport { checkLogin, login, logout } from \"../services\"\r\nimport { getNotification, putNotification } from \"../services/notification\"\r\nimport { User } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:User|null}\r\n\r\nexport type Auth = {user?:User|null}\r\n\r\ntype AuthState ={user?:User|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const [error, setError] = useState<string>()\r\n  const auth = useMemo(()=>({\r\n    user:authState.user\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user!==undefined && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((data)=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n        setError(data.response?.data?.message)\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { useMemo, useEffect, useState } from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\nimport { Appearance, ColorSchemeName as UserColorSchemeName } from 'react-native-appearance';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\n\r\nexport function useInitColorScheme(){\r\n  const [complete, setComplete] = useState(false)\r\n  useEffect(()=>{\r\n    if (!complete){\r\n      AsyncStorage.getItem(\"color\").then(v=>{\r\n        Appearance.set({colorScheme:(v==null)?'no-preference':(v as any)})\r\n        setComplete(true)\r\n      })\r\n    }\r\n  }, [complete])\r\n  return complete\r\n}\r\n\r\nexport function setColorScheme(colorScheme:UserColorSchemeName){\r\n  AsyncStorage.setItem('color',colorScheme as string).then(()=>Appearance.set({colorScheme}))\r\n}\r\n\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  const { dark } = useTheme()\r\n  const colorScheme = useMemo(()=> dark?'dark':'light', [dark]) as NonNullable<ColorSchemeName>;\r\n  return colorScheme\r\n}\r\n","\r\n\r\n\r\n\r\nimport React, { Suspense } from \"react\";\r\n\r\nconst lazyIcon = <T extends keyof typeof import(\"@expo/vector-icons\"),>(key:T)=>{\r\n    const Icon = React.lazy(\r\n        () => import(\"@expo/vector-icons\").then(module => {\r\n            return { default: module[key] }\r\n        })\r\n    ) as typeof import(\"@expo/vector-icons\")[T]\r\n    return (props:React.ComponentProps<typeof Icon>)=>{\r\n        return <Suspense fallback={<></>}>\r\n            <Icon {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\nexport const AntDesign = lazyIcon('AntDesign');\r\nexport const Ionicons = lazyIcon('Ionicons');\r\nexport const FontAwesome = lazyIcon('FontAwesome');\r\nexport const MaterialIcons = lazyIcon('MaterialIcons');\r\nexport const FontAwesome5 = lazyIcon('FontAwesome5');\r\nexport const Entypo = lazyIcon('Entypo');\r\nexport const SimpleLineIcons = lazyIcon('SimpleLineIcons');\r\nexport const MaterialCommunityIcons = lazyIcon('MaterialCommunityIcons');","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\n\r\nexport default (props:{children:React.ReactNode})=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import React, { Suspense } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\nimport { useInitColorScheme } from './src/hooks/useColorScheme';\r\nimport MobileSafeAreaView from './src/components/MobileSafeAreaView';\r\nimport { AuthProvider } from './src/hooks/useAuthContext';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { IntlProvider } from './src/hooks/useLangContext';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const isAppearenceComplete = useInitColorScheme()\r\n  const isViewer = window.location !==undefined && window.location.pathname.endsWith('/viewer')\r\n  const Navigation = React.lazy(()=> import('./src/navigation'))\r\n  const ChatViewer = React.lazy(()=> import('./src/navigation/ChatViewer'))\r\n  if (!isLoadingComplete || !isAppearenceComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <MobileSafeAreaView>\r\n          {!isViewer?<AuthProvider>\r\n            <QueryClientProvider client={queryClient}>\r\n              <IntlProvider>\r\n                {/* devtools */}\r\n                {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                <Suspense fallback={<></>}>\r\n                  <Navigation/>\r\n                </Suspense>\r\n                <StatusBar />\r\n              </IntlProvider>\r\n            </QueryClientProvider>\r\n          </AuthProvider>:\r\n          <QueryClientProvider client={queryClient}>\r\n            <IntlProvider>\r\n              <Suspense fallback={<></>}>\r\n                <ChatViewer/>\r\n              </Suspense>\r\n            </IntlProvider>\r\n          </QueryClientProvider>}\r\n        </MobileSafeAreaView>\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))","import { Ionicons } from '../lib/@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport {accountURL} from \"../constants/Envs\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nexport const needRefresh = (response: AxiosResponse<any, any>) => {\r\n    return (\r\n      (response.config.url === '/api/v1/user/?self=true' &&\r\n        response.request.responseURL.endsWith('account/login')) ||\r\n      response.status === 401\r\n    );\r\n  };\r\n  \r\n  const allAxios: AxiosInstance[] = [];\r\n  \r\n  export const axiosCreate = (baseURL:string) => {\r\n    const defaultOption: AxiosRequestConfig = {\r\n      baseURL,\r\n      withCredentials: true,\r\n      headers: {},\r\n    };\r\n    const _axios = axios.create(defaultOption);\r\n    _axios.interceptors.response.use(\r\n      async (response: AxiosResponse<any, any>) => {\r\n        if (needRefresh(response)) {\r\n          await refreshToken();\r\n          // eslint-disable-next-line no-throw-literal\r\n          throw { response };\r\n        }\r\n        return response;\r\n      },\r\n      async (error: any) => {\r\n        if (needRefresh(error.response) || error.response.status === 403) {\r\n          await refreshToken();\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    allAxios.push(_axios);\r\n    return _axios;\r\n  };\r\n  \r\n  const account = axiosCreate(accountURL);\r\n  \r\n  const refreshToken = async () => {\r\n    return getToken().then(async (token) => {\r\n      if (token) {\r\n        const r = await account.post(\r\n          '/api/v1/user/token/refresh/',\r\n          { token },\r\n          { headers: { Authorization: '' } }\r\n        );\r\n        if (r.status === 200 && r.data !== '') {\r\n          await setToken(r.data);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n  export const setToken = async (token: string | null) => {\r\n    allAxios.forEach((_axios) => {\r\n      _axios.defaults.headers['Authorization'] = `JWT ${token}`;\r\n    });\r\n    if (token) await AsyncStorage.setItem('Authorization', token);\r\n    else AsyncStorage.removeItem('Authorization');\r\n  };\r\n  \r\n  export const getToken = async () => {\r\n    const token = await AsyncStorage.getItem('Authorization');\r\n    allAxios.forEach((_axios) => {\r\n      _axios.defaults.headers['Authorization'] = token ? `JWT ${token}` : null;\r\n    });\r\n    return token;\r\n  };\r\n  \r\n  export default account;\r\n  ","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, EditMessengerContent, People } from '../types';\r\nimport { baseURL } from \"../constants/Envs\"\r\nimport { axiosCreate } from './axios';\r\n\r\nconst axios = axiosCreate(baseURL)\r\n\r\nexport const getChannelList = async (type:Channel['type'], user_id?:number)=>{\r\n    if(user_id==undefined)\r\n        return Promise.resolve(null)\r\n    if (type===\"people\")\r\n        return (await axios.get(`/api/v1/channels/messenger/?type=${type}&owner=${user_id}`) ).data as MessengerChannel[]\r\n    if(type===\"messenger\")\r\n        return (await axios.get(`/api/v1/channels/messenger/?type=${type}&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n    return Promise.resolve(null)\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\n\r\nexport const getPeopleList = async(channel_id:number)=>{\r\n    try{\r\n        return (await axios.get(`/api/v1/messengermembers/user/?channel=${channel_id}`) ).data as People[]\r\n    }\r\n    catch(e:any){\r\n        if (e.response.status==400 || e.response.status==403)\r\n            return Promise.resolve(null)\r\n        throw e\r\n    }\r\n}\r\n\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    try{\r\n        return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n    }\r\n    catch(e:any){\r\n        if (e.response.status==400 || e.response.status==403)\r\n            return Promise.resolve(null)\r\n        throw e\r\n    }\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number, isViewer?:boolean)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    const viewerPath = isViewer?'viewer/':''\r\n    return (await axios.get(`/api/v1/messengercontents/${viewerPath}?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const getNewMessengerContentList = async (channel_id:number, updated_gte:string)=>{\r\n    return (await axios.get(`/api/v1/messengercontents/?channel=${channel_id}&with_archive=true&updated_gte=${updated_gte}`)).data as MessengerContent[]\r\n}\r\n\r\nexport const getTimerMessageContentList = async (channel_id:number, timer_gt:string)=>{\r\n    return (await axios.get(`/api/v1/messengercontents/?channel=${channel_id}&timer_gt=${timer_gt}`)).data as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage, callback?:(args:{channel:number, filename:string, progress:number})=>void)=>{\r\n    if (message.file){\r\n        const formData = new FormData(); // formData 객체를 생성한다.\r\n        formData.append(\"file\", message.file)\r\n        Object.entries(message).forEach(value=>{\r\n            formData.append(value[0], `${value[1]}`)\r\n        })\r\n        const filename = message.file.name\r\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {\r\n            headers:{\r\n                ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n            onUploadProgress:(p)=>{\r\n                callback?.({channel:message.channel, filename, progress:p.loaded/(p.total || 1)})\r\n            }\r\n        })\r\n    }\r\n    else{\r\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n    }\r\n}\r\n\r\nexport const patchMessengerContent = async (content:EditMessengerContent)=>{\r\n    return (await axios.patch(`/api/v1/messengercontents/${content.id}/`, content)).data as MessengerContent\r\n}\r\n\r\n\r\nexport default axios","\r\nimport { CreateUser, User } from '../types';\r\nimport account, { getToken, needRefresh, setToken } from './axios';\r\nimport axios from './messenger';\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const formData = new FormData();\r\n    formData.append(\"username\", username);\r\n    formData.append(\"password\", password);\r\n    const r = await account.post(\"/login\", formData);\r\n    const token:string = r.headers['authorization']\r\n    if(r.status == 200 && token){\r\n        await setToken(token.split(' ')[1])\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await account.get(\"/logout\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async () => {\r\n    const value = (await account.get('/api/v1/user/?self=true'))?.data?.value;\r\n    if (value) {\r\n      return value[0] as User;\r\n    }\r\n    return null;\r\n  };\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(needRefresh(e.response)){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const postUser = async (user:CreateUser)=>{\r\n    await account.post(`/api/v1/user/`, {\r\n        imageUrl:user.imageUrl,\r\n        isAdmin: user.is_staff,\r\n        isGuest: user.is_guest,\r\n        name: user.name,\r\n        password: user.password,\r\n        username: user.username\r\n    })\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string, is_guest?:boolean, username?:string, password?:string})=>{\r\n    await account.patch(`/api/v1/user/`, {ids:[user.id], updated: {\r\n        name:user.name, \r\n        isGuest:user.is_guest,\r\n        username:user.username,\r\n        password:user.password,\r\n    }})\r\n}\r\n\r\nexport const deleteUser = async (userId:number)=>{\r\n    await account.delete(`/api/v1/user/${userId}/`)\r\n}\r\n\r\nexport const getExternalUserList = async (username:string)=>{\r\n    return (await axios.get(`/api/v1/users/?username=${username}`) ).data as User[]\r\n}\r\n\r\nexport const getExternalUser = async (id:number)=>{\r\n    return (await axios.get(`/api/v1/users/${id}/`) ).data as User\r\n}","// @ts-ignore\r\nimport {API_URL, FCM_PUBLIC_VAPID_KEY as fcm1, FCM_API_KEY as fcm2, TURN_SERVER as turn1 } from \"@env\"\r\nexport const accountURL =  `${API_URL}/account/`\r\nexport const baseURL =  `${API_URL}/messenger/`\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\nexport const websockerURL = `${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}`\r\nexport const FCM_PUBLIC_VAPID_KEY = fcm1\r\nexport const FCM_API_KEY = fcm2\r\nexport const TURN_SERVER = turn1","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { IntlShape } from \"@formatjs/intl\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport intl, { translations } from \"../lang\";\r\n\r\nconst IntlContext = createContext<{locale?:string, setLocale:(locale:string|undefined)=>void}>({locale:'auto', setLocale:()=>{}});\r\n\r\nexport const IntlProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [complete, setComplete] = useState(false)\r\n  const [locale, setLocale] = useState<string>()\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem(\"locale\").then(v=>{\r\n      setLocale(v || 'auto')\r\n      setComplete(true)\r\n    })\r\n  }, [])\r\n  return complete?<IntlContext.Provider value={{locale, setLocale}}>\r\n      {children}\r\n    </IntlContext.Provider>:<></>\r\n}\r\n\r\n\r\n\r\ntype TranslationParams = Parameters<IntlShape<string>[\"formatMessage\"]>[1];\r\n\r\nexport default ()=>{\r\n  const { locale, setLocale } = useContext(IntlContext)\r\n  return {\r\n    lang:(key: string, params?: TranslationParams) => {\r\n      if (locale == 'en' || key.length==0)\r\n        return key\r\n      if (locale != undefined && locale !='auto')\r\n        return translations[locale as 'ko'][key]\r\n      return intl\r\n        .formatMessage({ id: key, defaultMessage: key }, params)\r\n        .toString()\r\n    },\r\n    locale,\r\n    setLocale: (locale:string)=>{AsyncStorage.setItem('locale', locale).then(()=>setLocale(locale))}\r\n  }\r\n}\r\n"],"sourceRoot":""}