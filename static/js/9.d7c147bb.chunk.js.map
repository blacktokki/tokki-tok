{"version":3,"sources":["src/components/Calendar.tsx"],"names":["Calendar","props","locale","undefined","intl","LocaleConfig","defaultLocale","currentLocale","locales","_jsx","View","children","BaseCalendar","markingType","markedDates","renderArrow","direction","Text","monthFormat","initialDate","date","disableAllTouchEventsForDisabledDays","onMonthChange","onDayPress","setDate","dateString","current","style","width","dayComponent","dayjs","extend","localeData","monthNames","months","monthNamesShort","monthsShort","dayNames","weekdays","dayNamesShort","weekdaysShort","today","prev","next"],"mappings":"sFAAA,mKAwDe,SAASA,EAASC,GAC/B,IAAMC,OAA0BC,GAAhBF,EAAMC,QAAsC,QAAfD,EAAMC,OAAiBD,EAAMC,OAAOE,IAAKF,OACtFG,IAAaC,cAAgBJ,EAC7B,IAAMK,EAAgBF,IAAaG,QAAQN,GAC3C,OACEO,cAACC,IAAI,CAAAC,SACHF,cAACG,IAAY,CACXC,YAAaZ,EAAMY,YACnBC,YAAab,EAAMa,YACnBC,YAAa,SAAAC,GAAS,OAAIP,cAACQ,IAAI,CAAAN,SAAe,QAAbK,EAAoBT,EAAoB,KAAEA,EAAoB,QAC/FW,YAAaX,EAA2B,YACxCY,YAAalB,EAAMmB,KACnBC,qCAAsCpB,EAAMoB,qCAC5CC,cAAerB,EAAMqB,cACrBC,WAAY,SAACH,GAAI,OAAiB,MAAbnB,EAAMuB,aAAO,EAAbvB,EAAMuB,QAAUJ,EAAKK,aAC1CC,QAASzB,EAAMmB,KACfO,MAAO,CAAC,CAACC,MAAM,KAAO3B,EAAM0B,OAC5BE,aAAc5B,EAAM4B,iBAxD5BC,IAAMC,OAAOC,KAAYA,aACzBF,IAAM5B,OAAO,MAEZG,IAAaG,QAAY,GAAsB,CAC9CyB,WAAYH,IAAMI,SAClBC,gBAAiBL,IAAMM,cACvBC,SAAUP,IAAMQ,WAChBC,cAAeT,IAAMU,gBACrBC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNzB,iBAAaf,GAGf2B,IAAM5B,OAAO,MAEZG,IAAaG,QAAY,GAAsB,CAC9CyB,WAAYH,IAAMI,SAClBC,gBAAiBL,IAAMM,cACvBC,SAAUP,IAAMQ,WAChBC,cAAeT,IAAMU,gBACrBC,MAAO,eACPC,KAAM,eACNC,KAAM,eACNzB,YAAa","file":"static/js/9.d7c147bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport localeData from 'dayjs/plugin/localeData';\r\nimport 'dayjs/locale/ko'\r\nimport intl from \"../lang\";\r\nimport { StyleSheet, Text, View,StyleProp, ViewStyle } from 'react-native';\r\nimport LocaleConfig from 'xdate';\r\nimport {default as BaseCalendar} from 'react-native-calendars/src/calendar';\r\nimport { DateData, DayState, MarkedDates, MarkingTypes } from 'react-native-calendars/src/types';\r\n\r\ntype locale_detail = typeof LocaleConfig.locales[''] & {\r\n  today:string,\r\n  prev:string,\r\n  next:string,\r\n  monthFormat?:string\r\n}\r\n\r\ndayjs.extend(localeData).localeData()\r\ndayjs.locale('en');\r\n\r\n(LocaleConfig.locales['en'] as locale_detail) = {\r\n  monthNames: dayjs.months(),\r\n  monthNamesShort: dayjs.monthsShort(),\r\n  dayNames: dayjs.weekdays(),\r\n  dayNamesShort: dayjs.weekdaysShort(),\r\n  today: \"Today\",\r\n  prev: 'Prev',\r\n  next: 'Next',\r\n  monthFormat: undefined\r\n};\r\n\r\ndayjs.locale('ko');\r\n\r\n(LocaleConfig.locales['ko'] as locale_detail) = {\r\n  monthNames: dayjs.months(),\r\n  monthNamesShort: dayjs.monthsShort(),\r\n  dayNames: dayjs.weekdays(),\r\n  dayNamesShort: dayjs.weekdaysShort(),\r\n  today: \"오늘\",\r\n  prev: '이전',\r\n  next: '다음',\r\n  monthFormat: 'yyyy년 MM월'\r\n};\r\n\r\nexport type CalendarProps = {\r\n  date?:string,\r\n  setDate?:(date:string)=>void,\r\n  style:StyleProp<ViewStyle>\r\n  markingType?:MarkingTypes\r\n  markedDates?:MarkedDates\r\n  onMonthChange?:(date:DateData)=>void\r\n  disableAllTouchEventsForDisabledDays?:boolean\r\n  locale?:string,\r\n  dayComponent?:React.ComponentType<{date:DateData, state:DayState}>\r\n}\r\n\r\nexport default function Calendar(props:CalendarProps) {\r\n  const locale = (props.locale != undefined && props.locale !='auto')?props.locale:intl.locale\r\n  LocaleConfig.defaultLocale = locale\r\n  const currentLocale = LocaleConfig.locales[locale] as locale_detail\r\n  return (\r\n    <View>\r\n      <BaseCalendar\r\n        markingType={props.markingType}\r\n        markedDates={props.markedDates}\r\n        renderArrow={direction => <Text>{direction == 'left'?currentLocale['prev']:currentLocale['next']}</Text>}\r\n        monthFormat={currentLocale['monthFormat']}\r\n        initialDate={props.date}\r\n        disableAllTouchEventsForDisabledDays={props.disableAllTouchEventsForDisabledDays}\r\n        onMonthChange={props.onMonthChange}\r\n        onDayPress={(date)=> props.setDate?.(date.dateString)}\r\n        current={props.date}\r\n        style={[{width:400 }, props.style]}\r\n        dayComponent={props.dayComponent as any}\r\n      />\r\n      {/* <Text style={styles.dateText}>선택: {props.date}</Text> */}\r\n    </View>\r\n  );\r\n}\r\n"],"sourceRoot":""}