{"version":3,"sources":["src/services/axios.ts","src/lang/index.ts","src/hooks/useAuthContext.tsx","src/hooks/useColorScheme.ts","src/lib/@expo/vector-icons.tsx","src/hooks/useIsMobile.ts","src/components/MobileSafeAreaView.tsx","App.tsx","src/hooks/useCachedResources.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/constants/Envs.ts","src/services/account.ts","src/services/messenger.ts","src/hooks/useLangContext.tsx","src/services/notification.ts"],"names":["defaultOption","baseURL","withCredentials","headers","_axios","axios","create","interceptors","request","use","config","error","Promise","reject","response","status","getToken","then","_ref","_asyncToGenerator","token","r","post","accountURL","data","setToken","_x","apply","arguments","finally","_ref2","defaults","AsyncStorage","setItem","removeItem","_x2","_ref3","getItem","translations","ko","require","_RNLocalize$findBestL","RNLocalize","Object","keys","languageTag","isRTL","I18nManager","forceRTL","intl","createIntl","defaultLocale","locale","messages","createIntlCache","AuthContext","createContext","auth","dispatch","authReducer","initialState","action","type","_objectSpread","username","password","user","undefined","Error","AuthProvider","children","_useReducer","useReducer","_useReducer2","_slicedToArray","authState","_useState","useState","_useState2","setError","useMemo","_authState$user","_authState$user$membe","groupId","membership_set","find","g","root_group_id","group","useEffect","checkLogin","catch","e","console","log","login","_data$response","_data$response$data","message","getNotification","id","noti","putNotification","logout","_jsx","Provider","value","useContext","useInitColorScheme","complete","setComplete","v","Appearance","set","colorScheme","setColorScheme","useColorScheme","dark","useTheme","lazyIcon","key","Icon","React","lazy","module","default","props","Suspense","fallback","_Fragment","AntDesign","Ionicons","FontAwesome","Entypo","SimpleLineIcons","MaterialCommunityIcons","useMobileDetect","isMobile","Platform","OS","useIsMobile","window","innerHeight","height","setHeight","onChange","Dimensions","addEventListener","removeEventListener","View","style","queryClient","QueryClient","App","isLoadingComplete","_React$useState","_React$useState2","setLoadingComplete","_loadResourcesAndDataAsync","SplashScreen","Font","font","warn","loadResourcesAndDataAsync","useCachedResources","isAppearenceComplete","isViewer","location","pathname","endsWith","Navigation","ChatViewer","SafeAreaProvider","MobileSafeAreaView","QueryClientProvider","client","IntlProvider","_jsxs","StatusBar","l","search","decoded","slice","split","map","s","replace","join","history","replaceState","hash","exports","_split","_split2","websockerURL","FCM_PUBLIC_VAPID_KEY","FCM_API_KEY","TURN_SERVER","length","get","checkLoginToken","_ref4","_yield$axios$get","_ref5","e2","isOffline","code","startsWith","postUser","_ref6","group_id","_ref7","imageUrl","inviteGroupId","isAdmin","is_staff","isGuest","is_guest","name","_x4","patchUser","_ref8","patch","ids","updated","_x5","deleteUser","_ref9","userId","delete","_x6","getUserMembershipList","_ref10","_x7","getExternalMembershipList","_ref11","_x8","getChannelList","user_id","resolve","postChannel","channel","_x3","postDirectChannel","putChannel","put","getMessengerMemberList","channel_id","postBulkMessengerMember","user_ids","deleteMessengerMember","member_id","_x9","getMessengerContentList","id_lt","id_lt_param","viewerPath","results","_x10","_x11","_x12","getNewMessengerContentList","updated_gte","_x13","_x14","getTimerMessageContentList","timer_gt","_x15","_x16","postMessage","_ref12","callback","file","formData","FormData","append","entries","forEach","filename","onUploadProgress","p","progress","loaded","total","_x17","_x18","patchMessengerContent","_ref13","content","_x19","IntlContext","setLocale","_useState3","_useState4","_useContext","lang","params","formatMessage","defaultMessage","toString","postNotification","notification"],"mappings":"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","file":"static/js/app.5501b422.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\r\nimport {accountURL, baseURL} from \"../constants/Envs\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst defaultOption:AxiosRequestConfig = {\r\n    baseURL,\r\n    withCredentials: true,\r\n    headers: {}\r\n};\r\nconst _axios = axios.create(defaultOption);\r\n\r\n_axios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n_axios.interceptors.response.use(\r\n    response => {\r\n        // if((response.request.responseURL as string).indexOf('/task/login')>=0 && response.data.length != 0){\r\n        //     // redirect login\r\n        // }\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            return getToken().then(async(token)=>{\r\n                if (token){\r\n                    const r = await _axios.post(\"/api/v1/user/sso/refresh/\", {token}, {headers:{'Authorization':''}, baseURL: accountURL})\r\n                    if (r.status == 200 && r.data !== ''){\r\n                        setToken(r.data)\r\n                    }\r\n                }\r\n            }).finally(()=>{\r\n                return Promise.reject(error)\r\n            })\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport const setToken = async (token:string|null)=>{\r\n    _axios.defaults.headers['Authorization'] = `JWT ${token}`\r\n    if (token)\r\n        await AsyncStorage.setItem(\"Authorization\", token)\r\n    else\r\n        AsyncStorage.removeItem(\"Authorization\")\r\n}\r\nexport const getToken = async ()=>{\r\n    const token = await AsyncStorage.getItem(\"Authorization\")\r\n    _axios.defaults.headers['Authorization'] = token?`JWT ${token}`:null\r\n    return token\r\n}\r\n\r\nexport default _axios\r\n","import { createIntl, createIntlCache } from \"@formatjs/intl\";\r\nimport {I18nManager} from \"react-native\";\r\nimport * as RNLocalize from \"react-native-localize\";\r\n\r\nexport const translations = {\r\n  ko: require(\"./ko.json\"),\r\n} as const;\r\n\r\ntype Translation = keyof typeof translations;\r\n\r\n// fallback if no available language fits\r\nconst fallback = { languageTag: \"en\", isRTL: false };\r\n\r\nconst { languageTag, isRTL } =\r\n  RNLocalize.findBestLanguageTag(Object.keys(translations)) ?? fallback;\r\n\r\n// update layout direction\r\nI18nManager.forceRTL(isRTL);\r\n\r\n// console.log(languageTag)\r\nconst intl = createIntl(\r\n  {\r\n    defaultLocale: \"en\",\r\n    locale: languageTag,\r\n    messages: translations[languageTag as Translation],\r\n  },\r\n  createIntlCache(),\r\n);\r\n\r\nexport default intl","import React, { createContext, useContext, useEffect, useReducer, useMemo, Dispatch, useState } from \"react\"\r\nimport { checkLogin, login, logout } from \"../services\"\r\nimport { getNotification, putNotification } from \"../services/notification\"\r\nimport { UserMembership } from \"../types\"\r\n\r\ntype AuthAction = {type:string, username?:string, password?:string, user?:UserMembership|null}\r\n\r\nexport type Auth = {user?:UserMembership|null, groupId?:number}\r\n\r\ntype AuthState ={user?:UserMembership|null, request?:{username:string, password:string}|null}\r\n\r\nconst AuthContext = createContext<{auth:Auth, error?:string, dispatch:Dispatch<AuthAction>}>({auth:{}, dispatch:()=>{}});\r\n\r\nconst authReducer =(initialState:AuthState, action:AuthAction)=>{\r\n  switch (action.type){\r\n      case 'LOGIN_REQUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:action.username, password:action.password},\r\n        } as AuthState\r\n      case 'LOGIN_GUEST':\r\n        return {\r\n          ...initialState,\r\n          request:{username:'guest', password:'guest'},\r\n        } as AuthState\r\n      case 'LOGIN_SUCCESS':\r\n          return{\r\n              ...initialState,\r\n              user:action.user,\r\n              request:undefined\r\n          }\r\n      case 'LOGIN_FAILED':\r\n          return{\r\n              ...initialState,\r\n              request:undefined\r\n          }\r\n      case 'LOGOUT_REQUEST':\r\n          return{\r\n              ...initialState,\r\n              request:null\r\n          }\r\n      case 'LOGOUT_SUCCESS':\r\n          return {\r\n            ...initialState,\r\n            user:null,\r\n            request:undefined\r\n          }\r\n      case 'REFRESH':\r\n        return {\r\n          ...initialState,\r\n          user:undefined\r\n        }\r\n      default:\r\n          throw new Error( `Unhandled action type: ${action.type}`)\r\n  }\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [authState, dispatch] = useReducer(authReducer, {} as Auth)\r\n  const [error, setError] = useState<string>()\r\n  const auth = useMemo(()=>({\r\n    user:authState.user,\r\n    groupId: authState.user?.membership_set.find(g=>g.root_group_id==null)?.group\r\n  }), [authState])\r\n  useEffect(()=>{\r\n    if(authState.user===undefined){\r\n      checkLogin().then((user)=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((e)=>{\r\n        console.log(e)\r\n        dispatch({type:\"LOGOUT_SUCCESS\"})\r\n      })\r\n    }\r\n    else if(authState.user!==undefined && authState.request){\r\n      login(authState.request.username, authState.request.password).then(user=>{\r\n        dispatch({type:\"LOGIN_SUCCESS\", user})\r\n      }).catch((data)=>{\r\n        dispatch({type:\"LOGIN_FAILED\"})\r\n        setError(data.response?.data?.message)\r\n      })\r\n    }\r\n    else if(authState.user && authState.request===null){\r\n      getNotification(authState.user.id).then(noti=>{\r\n        noti && putNotification({...noti, token:''}).then(()=>{\r\n          logout().then(()=>dispatch({type:\"LOGOUT_SUCCESS\"}))\r\n        })\r\n      })\r\n    }\r\n  }, [authState])\r\n  return <AuthContext.Provider value={{auth, error, dispatch}}>\r\n    {children}\r\n  </AuthContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n  const authContext = useContext(AuthContext)\r\n  return authContext\r\n}\r\n","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { useMemo, useEffect, useState } from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\nimport { Appearance, ColorSchemeName as UserColorSchemeName } from 'react-native-appearance';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\n\r\nexport function useInitColorScheme(){\r\n  const [complete, setComplete] = useState(false)\r\n  useEffect(()=>{\r\n    if (!complete){\r\n      AsyncStorage.getItem(\"color\").then(v=>{\r\n        Appearance.set({colorScheme:(v==null)?'no-preference':(v as any)})\r\n        setComplete(true)\r\n      })\r\n    }\r\n  }, [complete])\r\n  return complete\r\n}\r\n\r\nexport function setColorScheme(colorScheme:UserColorSchemeName){\r\n  AsyncStorage.setItem('color',colorScheme as string).then(()=>Appearance.set({colorScheme}))\r\n}\r\n\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  const { dark } = useTheme()\r\n  const colorScheme = useMemo(()=> dark?'dark':'light', [dark]) as NonNullable<ColorSchemeName>;\r\n  return colorScheme\r\n}\r\n","\r\n\r\n\r\n\r\nimport React, { Suspense } from \"react\";\r\n\r\nconst lazyIcon = <T extends keyof typeof import(\"@expo/vector-icons\"),>(key:T)=>{\r\n    const Icon = React.lazy(\r\n        () => import(\"@expo/vector-icons\").then(module => {\r\n            return { default: module[key] }\r\n        })\r\n    ) as typeof import(\"@expo/vector-icons\")[T]\r\n    return (props:React.ComponentProps<typeof Icon>)=>{\r\n        return <Suspense fallback={<></>}>\r\n            <Icon {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\nexport const AntDesign = lazyIcon('AntDesign');\r\nexport const Ionicons = lazyIcon('Ionicons');\r\nexport const FontAwesome = lazyIcon('FontAwesome');\r\nexport const MaterialIcons = lazyIcon('MaterialIcons');\r\nexport const FontAwesome5 = lazyIcon('FontAwesome5');\r\nexport const Entypo = lazyIcon('Entypo');\r\nexport const SimpleLineIcons = lazyIcon('SimpleLineIcons');\r\nexport const MaterialCommunityIcons = lazyIcon('MaterialCommunityIcons');","import { Platform } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\nexport default ()=>{\r\n    const detectMobile = useMobileDetect();\r\n    return (detectMobile.isMobile() || Platform.OS == 'android' || Platform.OS == 'ios') as boolean\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Dimensions, Platform, View } from 'react-native'\r\nimport useIsMobile from '../hooks/useIsMobile'\r\n\r\n\r\nexport default (props:{children:React.ReactNode})=>{\r\n    const isMobile = useIsMobile()\r\n    const [height, setHeight] = useState(window.innerHeight + 1)\r\n    useEffect(()=>{\r\n        if(isMobile && Platform.OS == 'web'){\r\n            const onChange = (e:any)=>{\r\n                setHeight(window.innerHeight + 1)\r\n            }\r\n            Dimensions.addEventListener(\"change\",onChange)\r\n            return () => Dimensions.removeEventListener(\"change\", onChange)\r\n            \r\n        }\r\n    },[ isMobile])\r\n    return <View style={{height:isMobile&&Platform.OS == 'web'?height:'100%'}}>\r\n        {props.children}\r\n    </View>\r\n\r\n}\r\n  ","import React, { Suspense } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport useCachedResources from './src/hooks/useCachedResources';\r\nimport { useInitColorScheme } from './src/hooks/useColorScheme';\r\nimport MobileSafeAreaView from './src/components/MobileSafeAreaView';\r\nimport { AuthProvider } from './src/hooks/useAuthContext';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { IntlProvider } from './src/hooks/useLangContext';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const isAppearenceComplete = useInitColorScheme()\r\n  const isViewer = window.location !==undefined && window.location.pathname.endsWith('/viewer')\r\n  const Navigation = React.lazy(()=> import('./src/navigation'))\r\n  const ChatViewer = React.lazy(()=> import('./src/navigation/ChatViewer'))\r\n  if (!isLoadingComplete || !isAppearenceComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <MobileSafeAreaView>\r\n          {!isViewer?<AuthProvider>\r\n            <QueryClientProvider client={queryClient}>\r\n              <IntlProvider>\r\n                {/* devtools */}\r\n                {/* <ReactQueryDevtools initialIsOpen={true} /> */}\r\n                <Suspense fallback={<></>}>\r\n                  <Navigation/>\r\n                </Suspense>\r\n                <StatusBar />\r\n              </IntlProvider>\r\n            </QueryClientProvider>\r\n          </AuthProvider>:\r\n          <QueryClientProvider client={queryClient}>\r\n            <IntlProvider>\r\n              <Suspense fallback={<></>}>\r\n                <ChatViewer/>\r\n              </Suspense>\r\n            </IntlProvider>\r\n          </QueryClientProvider>}\r\n        </MobileSafeAreaView>\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n\r\n(function(l) {  // for github-page\r\n    if (l !== undefined && l.search[1] === '/' ) {\r\n        var decoded = l.search.slice(1).split('&').map(function(s) { \r\n        return s.replace(/~and~/g, '&')\r\n        }).join('?');\r\n        window.history.replaceState(null, '',\r\n            l.pathname.slice(0, -1) + decoded + l.hash\r\n        );\r\n    }\r\n}(window.location))","import { Ionicons } from '../lib/@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","// @ts-ignore\r\nimport {API_URL, FCM_PUBLIC_VAPID_KEY as fcm1, FCM_API_KEY as fcm2, TURN_SERVER as turn1 } from \"@env\"\r\nexport const accountURL =  `${API_URL}/account/`\r\nexport const baseURL =  `${API_URL}/messenger/`\r\nconst [SCHEMA, DOMAIN] = `${API_URL}`.split('://')\r\nexport const websockerURL = `${SCHEMA=='https'?'wss':'ws'}://${DOMAIN}`\r\nexport const FCM_PUBLIC_VAPID_KEY = fcm1\r\nexport const FCM_API_KEY = fcm2\r\nexport const TURN_SERVER = turn1","\r\nimport { CreateUser, User, UserMembership } from '../types';\r\nimport axios, { getToken, setToken } from './axios';\r\nimport {accountURL as baseURL} from '../constants/Envs'\r\n\r\nexport const login = async(username:string, password:string) => {\r\n    if(username.endsWith('.guest') && password.length == 0)\r\n        password = 'guest'\r\n    const r = await axios.post(\"/api-token-auth/\", {username, password});\r\n    if(r.status == 200){\r\n        await setToken(r.data)\r\n        return await checkLogin()\r\n    }\r\n}\r\n\r\nexport const logout = async() => {\r\n    await setToken(null)\r\n    return await axios.get(\"/api-auth/logout/\")\r\n}\r\n\r\nexport const guestLogin =  async() => {\r\n    return await login('guest', 'guest')\r\n}\r\n\r\nconst checkLoginToken = async ()=>{\r\n    const value = (await axios.get(\"/api/v1/users/memberships/?_self=true\"))?.data\r\n    if (value && value.length){\r\n        return value[0] as UserMembership\r\n    }\r\n    return null\r\n}\r\n\r\nexport const checkLogin = async() => {\r\n    const token = await getToken()\r\n    if (token === null)\r\n        return null\r\n    try{\r\n       return await checkLoginToken()\r\n    }\r\n    catch(e:any){\r\n        let error = e\r\n        if(e.response !== undefined && e.response.status==401){\r\n            try{\r\n                return await checkLoginToken()\r\n            }\r\n            catch(e2){\r\n                error = e2\r\n            }\r\n        }\r\n        const isOffline = ((error as any).code == \"ERR_NETWORK\" || (error as any).message && ((error as any).message as string).startsWith(\"Cannot read\"))\r\n        throw {error, isOffline}\r\n    }\r\n}\r\n\r\nexport const getUserList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/?group_id=${group_id}`) ).data as User[]\r\n}\r\n\r\nexport const postUser = async (user:CreateUser)=>{\r\n    await axios.post(`/api/v1/user/`, {\r\n        imageUrl:user.imageUrl,\r\n        inviteGroupId: user.inviteGroupId,\r\n        isAdmin: user.is_staff,\r\n        isGuest: user.is_guest,\r\n        name: user.name,\r\n        password: user.password,\r\n        username: user.username\r\n    }, {baseURL})\r\n}\r\n\r\nexport const patchUser = async (user:{id:number, name:string, is_guest?:boolean, username?:string, password?:string})=>{\r\n    console.log(user)\r\n    await axios.patch(`/api/v1/user/`, {ids:[user.id], updated: {\r\n        name:user.name, \r\n        isGuest:user.is_guest,\r\n        username:user.username,\r\n        password:user.password,\r\n    }}, {baseURL})\r\n}\r\n\r\nexport const deleteUser = async (userId:number)=>{\r\n    await axios.delete(`/api/v1/user/${userId}/`, {baseURL})\r\n}\r\n\r\nexport const getUserMembershipList = async (group_id:number)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?group_id=${group_id}`) ).data as UserMembership[]\r\n}\r\n\r\nexport const getExternalMembershipList = async (username:string)=>{\r\n    return (await axios.get(`/api/v1/users/memberships/?username=${username}`) ).data as UserMembership[]\r\n}","import { Channel, MessengerMember, MessengerContent, EditMessage, MessengerChannel, EditMessengerContent } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getChannelList = async (type:string, user_id?:number)=>{\r\n    if(user_id==undefined)\r\n        return Promise.resolve(null)\r\n    return (await axios.get(`/api/v1/channels/messenger/?type=${type}&messenger_user_id=${user_id}`) ).data as MessengerChannel[]\r\n}\r\n\r\nexport const postChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/`, channel)).data as Channel\r\n}\r\n\r\nexport const postDirectChannel = async(channel:Channel)=>{\r\n    return (await axios.post(`/api/v1/channels/direct/`, channel)).data as Channel\r\n}\r\n\r\nexport const putChannel = async(channel:Channel)=>{\r\n    return (await axios.put(`/api/v1/channels/${channel.id}/`, channel)).data as Channel\r\n}\r\n\r\nexport const deleteChannel = async(channel_id:number)=>{\r\n    await axios.delete(`/api/v1/channels/${channel_id}/`)\r\n}\r\n\r\nexport const getMessengerMemberList = async(channel_id:number)=>{\r\n    try{\r\n        return (await axios.get(`/api/v1/messengermembers/?channel=${channel_id}`) ).data as MessengerMember[]\r\n    }\r\n    catch(e:any){\r\n        if (e.response.status==400 || e.response.status==403)\r\n            return Promise.resolve(null)\r\n        throw e\r\n    }\r\n}\r\n\r\nexport const postBulkMessengerMember = async(data:{channel_id:number, user_ids:number[]})=>{\r\n    await axios.post(`/api/v1/messengermembers/bulk/`, {channel:data.channel_id, user_ids:data.user_ids})\r\n}\r\n\r\nexport const deleteMessengerMember = async(member_id:number)=>{\r\n    await axios.delete(`/api/v1/messengermembers/${member_id}/`)\r\n}\r\n\r\nexport const getMessengerContentList = async (channel_id:number, id_lt?:number, isViewer?:boolean)=>{\r\n    const id_lt_param = id_lt?`&id_lt=${id_lt}`:''\r\n    const viewerPath = isViewer?'viewer/':''\r\n    return (await axios.get(`/api/v1/messengercontents/${viewerPath}?limit=30&channel=${channel_id}${id_lt_param}`)).data.results as MessengerContent[]\r\n}\r\n\r\nexport const getNewMessengerContentList = async (channel_id:number, updated_gte:string)=>{\r\n    return (await axios.get(`/api/v1/messengercontents/?channel=${channel_id}&with_archive=true&updated_gte=${updated_gte}`)).data as MessengerContent[]\r\n}\r\n\r\nexport const getTimerMessageContentList = async (channel_id:number, timer_gt:string)=>{\r\n    return (await axios.get(`/api/v1/messengercontents/?channel=${channel_id}&timer_gt=${timer_gt}`)).data as MessengerContent[]\r\n}\r\n\r\nexport const postMessage = async (message:EditMessage, callback?:(args:{channel:number, filename:string, progress:number})=>void)=>{\r\n    if (message.file){\r\n        const formData = new FormData(); // formData 객체를 생성한다.\r\n        formData.append(\"file\", message.file)\r\n        Object.entries(message).forEach(value=>{\r\n            formData.append(value[0], `${value[1]}`)\r\n        })\r\n        const filename = message.file.name\r\n        await axios.post(`/api/v1/messengercontents/messages/`, formData, {\r\n            headers:{\r\n                ...(axios.defaults.headers as any), \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n            onUploadProgress:(p)=>{\r\n                callback?.({channel:message.channel, filename, progress:p.loaded/(p.total || 1)})\r\n            }\r\n        })\r\n    }\r\n    else{\r\n        await axios.post(`/api/v1/messengercontents/messages/`, message)\r\n    }\r\n}\r\n\r\nexport const patchMessengerContent = async (content:EditMessengerContent)=>{\r\n    return (await axios.patch(`/api/v1/messengercontents/${content.id}/`, content)).data as MessengerContent\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { IntlShape } from \"@formatjs/intl\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport intl, { translations } from \"../lang\";\r\n\r\nconst IntlContext = createContext<{locale?:string, setLocale:(locale:string|undefined)=>void}>({locale:'auto', setLocale:()=>{}});\r\n\r\nexport const IntlProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [complete, setComplete] = useState(false)\r\n  const [locale, setLocale] = useState<string>()\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem(\"locale\").then(v=>{\r\n      setLocale(v || 'auto')\r\n      setComplete(true)\r\n    })\r\n  }, [])\r\n  return complete?<IntlContext.Provider value={{locale, setLocale}}>\r\n      {children}\r\n    </IntlContext.Provider>:<></>\r\n}\r\n\r\n\r\n\r\ntype TranslationParams = Parameters<IntlShape<string>[\"formatMessage\"]>[1];\r\n\r\nexport default ()=>{\r\n  const { locale, setLocale } = useContext(IntlContext)\r\n  return {\r\n    lang:(key: string, params?: TranslationParams) => {\r\n      if (locale == 'en' || key.length==0)\r\n        return key\r\n      if (locale != undefined && locale !='auto')\r\n        return translations[locale as 'ko'][key]\r\n      return intl\r\n        .formatMessage({ id: key, defaultMessage: key }, params)\r\n        .toString()\r\n    },\r\n    locale,\r\n    setLocale: (locale:string)=>{AsyncStorage.setItem('locale', locale).then(()=>setLocale(locale))}\r\n  }\r\n}\r\n","import { Notification } from '../types';\r\nimport axios from './axios';\r\n\r\nexport const getNotification = async (user_id:number)=>{\r\n    const data = (await axios.get(`/api/v1/notifications/?type=WEB&user=${user_id}`) ).data as Notification[]\r\n    return data.length?data[0]:undefined\r\n}\r\n\r\nexport const postNotification = async(notification:Notification)=>{\r\n    return (await axios.post(`/api/v1/notifications/`, notification)).data as Notification\r\n}\r\n\r\nexport const putNotification = async(notification:Notification)=>{\r\n    return (await axios.put(`/api/v1/notifications/${notification.id}/`, notification)).data as Notification\r\n}"],"sourceRoot":""}