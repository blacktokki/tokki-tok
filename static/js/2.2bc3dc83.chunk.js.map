{"version":3,"sources":["src/components/Themed.tsx","src/constants/Colors.ts","src/hooks/useModalsContext.tsx","src/hooks/useResizeContext.tsx","src/components/CommonButton.tsx","src/lib/react-native-paper/Avatar.tsx","src/components/Avatar.tsx","src/components/ModalSection.tsx","src/components/CommonSection.tsx","src/hooks/useModalEffect.ts","src/hooks/useWebsocketContext.tsx","src/hooks/lists/useMessengerContentList.ts","src/hooks/useUploadContext.tsx","src/components/Messages/MessageContentView.tsx","src/modals/MessageModal.tsx","src/components/Messages/EditorPreview.tsx","src/components/Messages/LinkPreview.tsx","src/components/Messages/FilePreview.tsx","src/components/Messages/index.tsx","src/hooks/lists/useMessengerViewerList.ts","src/components/Messages/TimerTags.tsx","src/hooks/lists/useTimerMessageContent.ts"],"names":["useThemeColor","props","colorName","theme","useColorScheme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","_objectWithoutProperties","_excluded","color","light","dark","_jsx","DefaultText","_objectSpread","View","_excluded2","backgroundColor","DefaultView","text","background","tint","tabIconDefault","tabIconSelected","hoverColor","buttonBackgroundColor","header","headerBottomColor","buttonBorderColor","iconColor","borderColor","focus","ModalsContext","createContext","setModal","ModalsProvider","_ref","children","allModals","modals","_useState","useState","_useState2","_slicedToArray","setModals","windowType","useResizeContext","_useState3","_useState4","animationType","setAnimationType","useEffect","filter","v","visible","length","map","Component","_jsxs","Provider","value","newModals","m","modal","index","Modal","transparent","useContext","getWindowType","window","height","width","ResizeContextContext","Dimensions","get","ResizeContextProvider","detectMobile","useMobileDetect","_useWindowDimensions","useWindowDimensions","setWindowType","isMobile","DefaultButton","hover","setHover","Pressable","onPress","onHoverIn","onHoverOut","disabled","paddingVertical","paddingHorizontal","selectable","fontSize","textStyle","title","_props","styles","StyleSheet","create","borderRadius","borderWidth","textAlign","fontWeight","normalizeHash","hash","min","max","Math","floor","str","initHash","i","charCodeAt","abs","stringToHSL","name","userId","Avatar","size","label","split","join","toUpperCase","avatarFromChannel","item","user","avatar","member_count","id","subowner","owner","CommonSection","autoScale","outerContainerStyle","flex","alignSelf","flexShrink","containerStyle","margin","justifyContent","alignItems","bodyStyle","padding","maxWidth","BottomSheet","outerContainer","outerContainerFill","container","withSeparator","separator","undefined","titleView","titleStyle","subtitle","bodyView","marginHorizontal","marginVertical","flexDirection","marginBottom","marginTop","callback","deps","navigation","useNavigation","event","e","preventDefault","addListener","removeListener","defaultContext","lastJsonMessage","sendJsonMessage","WebSocketContext","WebSocketInternalProvider","path","Context","useBackground","token","setToken","AppState","currentState","isActive","setIsActive","_useWebSocket","useWebSocket","websockerURL","shouldReconnect","closeEvent","protocols","onOpen","console","log","onClose","AsyncStorage","getItem","then","listener","addEventListener","nextState","remove","WebSocketProvider","_ref2","disable","_Fragment","updateContnetPage","pages","updateMessages","update_i","forEach","page","current","timer","is_archive","useMessengerContentList","channel_id","queryClient","useQueryClient","_useInfiniteQuery","useInfiniteQuery","_asyncToGenerator","pageParam","getMessengerContentList","_x","apply","arguments","select","data","next","getNextPageParam","lastPage","refetchOnReconnect","refetchOnWindowFocus","query","updated_gte","Date","state","dataUpdatedAt","toISOString","newData","getNewMessengerContentList","contents","lastMessageId","nextMessages","timerMessageRefetch","findIndex","concat","_toConsumableArray","invalidateQueries","fetchNextPage","useWebsocketContext","setQueryData","_data","pageParams","useMessengerContentMutation","channelId","uploadDispatch","useUploadContext","dispatch","useMutation","message","postMessage","onSuccess","_patch","patchMessengerContent","mutate","patch","UploadContext","upload","uploadReducer","initialState","action","files","channel","f","filename","progress","push","_defineProperty","UploadContextProvider","_useReducer","useReducer","_useReducer2","MessageContentView","Hyperlink","linkDefault","wordBreak","linkStyle","onPressLink","content","MessageModal","isOwner","sendToScreen","message_set","editorContents","attatchment_set","type","editor","fullContent","description","replaceAll","regexForStripHTML","lang","useLangContext","useModalsContext","contentMutation","back","useModalEffect","TouchableOpacity","Ionicons","CommonButton","Clipboard","setString","editorValue","RenderHTML","React","lazy","memo","minWidth","borderTopWidth","Suspense","fallback","contentWidth","source","baseStyle","link","touchableRef","Linking","openURL","url","onLongPress","image_url","Image","uri","resizeMode","maxHeight","humanFileSize","pow","toFixed","file","showBorder","thumbnail","FontAwesome","filesize","MessengerContentPageItem","_nextPage2","lastTouchRef","useRef","now","useIsMobile","nextPage","_nextPage","nextContent","reverse","onTouchMove","index2","created","slice","date","isSystem","isFirst","isSelf","ownerId","dayChanged","marginLeft","getOnPress","timerToString","attatchment","aIndex","EditorPreview","FilePreview","LinkPreview","auth","useViewerContentList","useMemo","_props$auth","_props$auth$user","renderItem","useCallback","FlatList","contentContainerStyle","flexGrow","onScroll","nativeEvent","contentSize","contentOffset","y","onLayout","p","layout","timerFormat","datetime","_timerFormat","dayjs","year","format","month","TimerTag","start","end","ratio","diff","setExpand","isExpand","overflow","position","preview_content","timerMessages","useQuery","getTimerMessageContentList","sorted","sort","a","b","_sorted$","ms","Number","MAX_VALUE","timeout","setTimeout","clearTimeout","useTimerMessageContentList","setNow","expand","paddingTop"],"mappings":"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","file":"static/js/2.2bc3dc83.chunk.js","sourcesContent":["/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors'\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n    hoverColor:'rgb(242,242,242)',\r\n    buttonBackgroundColor: '#f6f8fa', //'rgba(9,30,66,0.08)',//rgb(242,242,242)\\\r\n    header:'#f6f8fa',\r\n    headerBottomColor:'rgb(216, 216, 216)',\r\n    buttonBorderColor:'rgba(27,31,36,0.15)',\r\n    iconColor: 'black'\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n    hoverColor: '#010409',//'rgb(1,4,9)',\r\n    buttonBackgroundColor: '#010409',//'#282624',\r\n    header:'#010409',\r\n    headerBottomColor:'rgb(40, 40, 40)',\r\n    buttonBorderColor:'rgba(229,225,220,0.15)',\r\n    iconColor: 'white'\r\n  },\r\n  borderColor:'#d0d7de',\r\n  \r\n  focus:'#0065A4',\r\n};\r\n","import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport { Modal } from \"react-native\";\r\nimport useResizeContext from \"./useResizeContext\";\r\n\r\ntype ModalProps = any\r\n\r\ntype ModalState = {\r\n  Component:React.ComponentType<ModalProps>,\r\n  props:any\r\n  visible:boolean\r\n}\r\ntype SetModal = (Component:ModalState[\"Component\"]|null, props:ModalProps|null)=>void\r\n\r\nconst ModalsContext = createContext<{setModal: SetModal}>({\r\n    setModal: () => {}\r\n});\r\n\r\nexport const ModalsProvider = ({children, modals:allModals}:{children:React.ReactNode, modals:React.ComponentType<ModalProps>[]}) => {\r\n    const [modals, setModals] = useState<ModalState[]>([]);\r\n    const windowType = useResizeContext();\r\n    const [animationType, setAnimationType] = useState('none')\r\n    const setModal:SetModal = (Component, props) => {\r\n        const newModals = modals.map(m=>{\r\n            if(Component==null || m.Component != Component){\r\n                return {\r\n                    ...m,\r\n                    visible:false\r\n                }\r\n            }\r\n            else if(m.Component == Component){\r\n                return {\r\n                    Component, \r\n                    props:props!==null?props:m.props,\r\n                    visible:props!==null\r\n                }\r\n            }\r\n            return m        \r\n        })\r\n        setModals(newModals);\r\n    }\r\n    useEffect(()=>{\r\n        if (modals.filter(v=>v.visible).length == 0)\r\n            setAnimationType(windowType == 'landscape'?'fade':'slide')\r\n    }, [windowType])\r\n    useEffect(()=>{\r\n        setModals(allModals.map((Component)=>({Component, props:null, visible:false})))\r\n    }, [allModals])\r\n    return <ModalsContext.Provider value={{setModal}}>\r\n        {children}\r\n        {modals.map((modal, index)=>{\r\n            const { Component, props, visible } = modal;\r\n            return <Modal key={index} animationType={animationType as any} visible={visible} transparent>\r\n                <Component {...props}/>\r\n            </Modal>\r\n        })}\r\n    </ModalsContext.Provider>\r\n}\r\n\r\nexport default ()=>{\r\n    const modalsContext = useContext(ModalsContext)\r\n    return modalsContext\r\n}\r\n\r\n","import React, { useState, useEffect, createContext, useContext, useMemo } from 'react';\r\nimport { Dimensions, ScaledSize, useWindowDimensions } from 'react-native';\r\n//@ts-ignore\r\nimport useMobileDetect from 'use-mobile-detect-hook';\r\n\r\ntype WindowType = 'portrait' | 'landscape'\r\n\r\nconst getWindowType = (window:{width:number, height:number})=> window.height >= window.width?'portrait':'landscape' as WindowType;\r\n\r\nconst ResizeContextContext = createContext<WindowType>(getWindowType(Dimensions.get('window')));\r\n\r\nexport const ResizeContextProvider = ({children}:{children:React.ReactNode})=>{\r\n  const detectMobile = useMobileDetect();\r\n  const {width, height} = useWindowDimensions()\r\n  const [windowType, setWindowType] = useState(getWindowType({width, height}))\r\n  useEffect(()=>{\r\n    setWindowType(getWindowType({width, height}))\r\n  }, [width, height])\r\n  return <ResizeContextContext.Provider value={detectMobile.isMobile()?'portrait':windowType}>\r\n    {children}\r\n  </ResizeContextContext.Provider>\r\n}\r\n\r\nexport default function useResizeContext() {\r\n  const windowType = useContext(ResizeContextContext)\r\n  return windowType\r\n}","import React, { useState } from 'react';\r\nimport { Text, StyleSheet, Pressable, StyleProp, ViewStyle} from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { CustomButtonProps } from '../types';\r\n\r\nconst DefaultButton = (props:CustomButtonProps & {borderColor:string})=>{\r\n    const [hover, setHover] = useState(false)\r\n    return <Pressable\r\n        onPress={()=>props.onPress()}\r\n        //@ts-ignore\r\n        onHoverIn={()=>setHover(true)}\r\n        onHoverOut={()=>setHover(false)}\r\n        disabled={props.disabled}\r\n        style={[\r\n            {\r\n                paddingVertical:5, \r\n                paddingHorizontal:16\r\n            },\r\n            props.style,\r\n            (hover || props.disabled)?{backgroundColor:props.color, borderColor:props.borderColor}:{}\r\n        ]}>\r\n            {props.children?props.children:\r\n            <Text selectable={false} style={[{fontSize:14}, props.textStyle]}>{props.title}</Text>}\r\n        </Pressable>\r\n}\r\n\r\nexport default (props:CustomButtonProps)=>{\r\n    const theme = useColorScheme()\r\n    const _props = {\r\n        color:Colors[theme].hoverColor,\r\n        borderColor:theme=='light'?Colors[theme].buttonBorderColor:'#7d8590',\r\n        ...props,\r\n        style:[\r\n            styles.style,\r\n            {\r\n                backgroundColor:Colors[theme].buttonBackgroundColor,\r\n                borderColor:Colors[theme].buttonBorderColor\r\n            },\r\n            props.style,\r\n        ] as StyleProp<ViewStyle>,\r\n        textStyle:[\r\n            styles.text, \r\n            {color:Colors[theme].text},\r\n            props.textStyle\r\n        ]\r\n    }\r\n    return <DefaultButton {..._props}/>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    style:{\r\n        borderRadius:6, \r\n        borderWidth:1, \r\n    },\r\n    text:{\r\n        textAlign:'center', \r\n        fontWeight:'600'\r\n    }\r\n});\r\n","import * as React from 'react';\r\nimport { Avatar } from 'react-native-paper';\r\nimport { AvatarProps } from '../../types';\r\n\r\nconst normalizeHash = (hash: number, min: number, max: number) => {\r\n    return Math.floor((hash % (max - min)) + min);\r\n};\r\n\r\nconst stringToHSL = (str: string, initHash?:number) => {\r\n    let hash = initHash || 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    hash = Math.abs(hash);\r\n    return `hsl(${normalizeHash(hash, 0, 360)}, ${normalizeHash(hash, 0, 100)}%, ${normalizeHash(hash, 25, 75)}%)`;\r\n};\r\n\r\nexport default (props:AvatarProps) => {\r\n    const backgroundColor = stringToHSL(props.name, props.userId)\r\n    return <Avatar.Text style={{backgroundColor}} size={props.size} label={props.name.split(' ').map(v=>v[0]).join().toUpperCase()} />\r\n};","import React from 'react';\r\nimport Avatar from '../lib/react-native-paper/Avatar';\r\nimport { AvatarProps, MessengerChannel, User } from '../types';\r\n\r\nexport function avatarFromChannel(item:MessengerChannel, user?:User|null){\r\n    let avatar;\r\n    let name = item.name\r\n    if (item.member_count<3){\r\n        avatar = (item.member_count==1 || user?.id == item.subowner.id)?item.owner:item.subowner\r\n        name = name.length>0?name:avatar.name \r\n    }\r\n    return {avatar, name}\r\n}\r\n\r\nexport default (props:AvatarProps)=>{\r\n    return <Avatar {...props}/>\r\n}\r\n\r\n","import React from 'react'\r\nimport CommonSection from \"./CommonSection\";\r\nimport useResizeContext from '../hooks/useResizeContext';\r\n\r\nexport default (props:{children?: React.ReactNode})=>{\r\n    const windowType = useResizeContext();\r\n    return <CommonSection\r\n        autoScale\r\n        outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', flexShrink:1, width:'100%'}}\r\n        containerStyle={{flex:1, margin:0, justifyContent:'center', alignItems:'center'}}\r\n        bodyStyle={windowType=='landscape'?{width:'90%', height:'90%', padding:'5%'}:{width:'100%', height:'100%', maxWidth:1080}}\r\n    >\r\n        {props.children}\r\n    </CommonSection>\r\n}\r\n\r\nexport const BottomSheet = (props:{children?: React.ReactNode})=><CommonSection\r\n    autoScale\r\n    outerContainerStyle={{flex:1, alignSelf:'center', backgroundColor:'#8888', width:'100%'}}\r\n    containerStyle={{flex:1, margin:0, justifyContent:'flex-end'}}\r\n>\r\n    {props.children}\r\n</CommonSection>","import * as React from 'react';\r\nimport { View, Text } from './Themed';\r\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport type SectionParamList = {\r\n    title?: string,\r\n    titleStyle?:StyleProp<TextStyle>\r\n    outerContainerStyle?:StyleProp<TextStyle>\r\n    containerStyle?:StyleProp<ViewStyle>\r\n    bodyStyle?:StyleProp<ViewStyle>\r\n    subtitle?: string\r\n    withSeparator?: boolean\r\n    autoScale?:boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default function CommonSection(props:SectionParamList){\r\n  return (\r\n    <View style={[styles.outerContainer, props.autoScale?{}:styles.outerContainerFill, props.outerContainerStyle]}>\r\n        <View style={[styles.container, props.containerStyle]}>\r\n            {props.withSeparator?<View style={styles.separator} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />:undefined}\r\n            {props.title?<View style={styles.titleView}>\r\n              <Text style={[styles.title, props.titleStyle]}>{props.title}</Text>\r\n              <Text style={styles.subtitle}>{props.subtitle}</Text>\r\n            </View>:undefined}\r\n            <View style={[styles.bodyView, props.bodyStyle]}>\r\n            {props.children}\r\n            </View>\r\n          </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer:{\r\n    alignItems:'stretch',\r\n    backgroundColor:'transparent'\r\n  },\r\n  outerContainerFill:{\r\n    width:'100%',\r\n    maxWidth:1080,\r\n  },\r\n  container: {\r\n      marginHorizontal:20,\r\n      marginVertical: 10,\r\n      backgroundColor:'transparent',\r\n    },\r\n    titleView:{\r\n      width: '100%',\r\n      flexDirection:'row',\r\n      backgroundColor:'transparent',\r\n      marginBottom:5,\r\n    },\r\n    title: {\r\n      flex:1,\r\n      fontSize: 16,\r\n    },\r\n    subtitle: {\r\n      flex:1,\r\n      fontSize: 12,\r\n      textAlign: 'right',\r\n      marginTop:4\r\n    },\r\n    separator: {\r\n      marginBottom: 0,\r\n      height: 1,\r\n      width: '100%',\r\n    },\r\n    bodyView:{\r\n      width: '100%',\r\n      padding: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderWidth:1,\r\n      borderColor:Colors.borderColor,\r\n      borderRadius:6\r\n    }\r\n  });\r\n  ","import { DependencyList, useEffect } from \"react\";\r\nimport { EventArg, useNavigation } from \"@react-navigation/core\";\r\n\r\n\r\nexport default (callback:()=>void, deps?:DependencyList)=>{\r\n    const navigation = useNavigation()\r\n    useEffect(()=>{\r\n        const event = (e:EventArg<any, true, any>)=> {\r\n            e.preventDefault();\r\n            callback()\r\n        }\r\n        navigation.addListener('beforeRemove', event)\r\n        return () => {\r\n            navigation.removeListener('beforeRemove', event)\r\n        }\r\n  }, deps)\r\n}","import React, { Context, createContext,  useContext, useEffect, useState } from \"react\"\r\nimport useWebSocket from \"react-use-websocket\"\r\nimport { SendJsonMessage } from \"react-use-websocket/dist/lib/types\"\r\nimport {websockerURL } from \"../constants/Envs\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { AppState, AppStateStatus } from \"react-native\";\r\n\r\ntype WebsocketContextType = {lastJsonMessage:any, sendJsonMessage:SendJsonMessage }\r\nconst defaultContext = {lastJsonMessage:undefined, sendJsonMessage:()=>{}}\r\nconst WebSocketContext = createContext<WebsocketContextType>(defaultContext);\r\n\r\nexport const WebSocketInternalProvider = ({children, path, Context, useBackground}:{children:React.ReactNode, path:string, Context:Context<WebsocketContextType>, useBackground?:boolean})=>{\r\n  const [token, setToken] = useState<string|null>(null)\r\n  const [isActive, setIsActive] = useState<boolean>(useBackground || AppState.currentState == 'active')\r\n  const { lastJsonMessage, sendJsonMessage } = useWebSocket(`${websockerURL}/${path}`,{\r\n    shouldReconnect: (closeEvent) => true,\r\n    protocols: token?['Authorization',  token]:undefined,\r\n    onOpen: (e)=>{console.log(`success websocket connection(${path})`)},\r\n    onClose: (e)=> {console.log(`closed websocket connection(${path})`)},\r\n  }, isActive && token!=null)\r\n  useEffect(()=>{\r\n    AsyncStorage.getItem('Authorization').then(setToken)\r\n    const onChange = (nextState:AppStateStatus)=>setIsActive(useBackground || nextState == 'active')\r\n    const listener = AppState.addEventListener(\"change\", onChange)\r\n    return ()=> listener.remove()\r\n  }, [])\r\n  return <Context.Provider value={token!=null?{lastJsonMessage, sendJsonMessage}:defaultContext}>\r\n      {children}\r\n    </Context.Provider>\r\n}\r\n\r\nexport const WebSocketProvider = ({disable, children}:{disable?:boolean, children:React.ReactNode})=>{\r\n  return disable?<>{children}</>:<WebSocketInternalProvider path={'messenger/ws/'} Context={WebSocketContext}>\r\n    {children}\r\n  </WebSocketInternalProvider>\r\n}\r\n\r\nexport default ()=>{\r\n  const webSocketContext = useContext(WebSocketContext)\r\n  return webSocketContext\r\n}\r\n\r\n","import { useEffect } from \"react\"\r\nimport { InfiniteData, Query, QueryKey, useInfiniteQuery, useMutation, useQueryClient } from \"react-query\"\r\nimport { getMessengerContentList, postMessage, patchMessengerContent, getNewMessengerContentList } from \"../../services\"\r\nimport { EditMessage, MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\nimport useUploadContext from \"../useUploadContext\"\r\n\r\nexport type MessengerContentPage = {\r\n  next?:MessengerContentPage\r\n  current:MessengerContent[]\r\n}\r\n\r\nconst updateContnetPage = (pages:MessengerContentPage[], updateMessages:MessengerContent[])=>{\r\n  let update_i = 0\r\n  pages.forEach(page=>{\r\n    if (update_i == updateMessages.length)\r\n      return\r\n    page.current.forEach(v=>{\r\n      if (update_i == updateMessages.length)\r\n        return\r\n      if (v.id==updateMessages[update_i].id){\r\n        v.timer = updateMessages[update_i].timer\r\n        v.is_archive = updateMessages[update_i].is_archive\r\n        update_i += 1\r\n      }\r\n    })\r\n    page.current = page.current.filter(v=>!v.is_archive)\r\n  })\r\n}\r\n\r\nexport default function useMessengerContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const refetch = (query:Query<MessengerContentPage, unknown, InfiniteData<MessengerContentPage>, QueryKey>)=>{\r\n    const updated_gte = new Date(query.state.dataUpdatedAt).toISOString()\r\n    const newData = {...query.state.data}\r\n    getNewMessengerContentList(channel_id, updated_gte).then(contents=>{\r\n      if(newData.pages){\r\n        const lastMessageId = newData.pages[0].current[0].id || 0\r\n        const nextMessages = contents.filter(v=>v.id>lastMessageId && v.is_archive==false)\r\n        const updateMessages = contents.filter(v=>v.id<=lastMessageId)\r\n        const timerMessageRefetch = nextMessages.findIndex(v=>v.timer) >= 0 || updateMessages.length > 0\r\n        newData.pages[0].current = [...nextMessages, ...newData.pages[0].current]\r\n        updateContnetPage(newData.pages, updateMessages)\r\n        timerMessageRefetch && queryClient.invalidateQueries([\"TimerMessageContentList\", channel_id])\r\n      }\r\n    })\r\n    return false\r\n  }\r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"MessengerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:refetch\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['data']['channel'] == channel_id){\r\n      if(lastJsonMessage['type']=='next_message'){\r\n        queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n          if(_data?.pages[0].current && _data?.pages[0].current[0].id != lastJsonMessage['data'].id)\r\n            _data.pages[0].current = [lastJsonMessage['data'], ..._data?.pages[0].current]\r\n          return {...(_data || {pages:[], pageParams:[]})}\r\n        })\r\n      }\r\n      if(lastJsonMessage['type']=='update_message'){\r\n        queryClient.setQueryData<InfiniteData<MessengerContentPage>>([\"MessengerContentList\", channel_id], (_data)=>{\r\n          _data?.pages && updateContnetPage(_data.pages, [lastJsonMessage['data']])\r\n          return {...(_data || {pages:[], pageParams:[]})}\r\n        })\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  return { data, fetchNextPage }\r\n}\r\n\r\nexport function useMessengerContentMutation(channelId?:number){\r\n  // const queryClient = useQueryClient()\r\n  const {dispatch:uploadDispatch} = useUploadContext()\r\n  const create = useMutation((message:EditMessage)=>postMessage(message, uploadDispatch), {\r\n    onSuccess: () => {\r\n      // queryClient.setQueryData(['MessengerContentList'], (data:any) => ({\r\n      //   pages: data.pages.slice(0, 1),\r\n      //   pageParams: data.pageParams.slice(0, 1),\r\n      // }))\r\n      // queryClient.invalidateQueries(\"MessengerContentList\")\r\n    }\r\n  });\r\n  const _patch = useMutation(patchMessengerContent);\r\n  return { create:create.mutate, patch:_patch.mutate }\r\n}","import React, { createContext, useContext, Dispatch, useReducer } from 'react';\r\n\r\ntype UploadState = Record<number, {\r\n  filename: string,\r\n  progress?: number,\r\n}[]>\r\n\r\ntype UploadAction = {\r\n  channel:number,\r\n  filename:string,\r\n  progress?:number\r\n}\r\n\r\ntype UploadContextType = {\r\n  upload:UploadState,\r\n  dispatch:Dispatch<UploadAction>\r\n}\r\n\r\nconst UploadContext = createContext<UploadContextType>({upload:{} as UploadState, dispatch:()=>{}});\r\n\r\nconst uploadReducer =(initialState:UploadState, action:UploadAction)=>{\r\n  const files = [...(initialState[action.channel] || [])]\r\n  const index = files.findIndex(f=>f.filename==action.filename)\r\n  if (index >= 0){\r\n    files[index] = {filename:action.filename, progress:action.progress} \r\n  }\r\n  else{\r\n    files.push({filename:action.filename, progress:action.progress})\r\n  }\r\n  return {\r\n    ...initialState,\r\n    [action.channel] : files.filter(f=>(f.progress || 0)<1)\r\n  }\r\n}\r\n\r\nexport const UploadContextProvider = ({children}:{children:React.ReactNode})=>{\r\n  const [upload, dispatch] = useReducer(uploadReducer, {})\r\n  return <UploadContext.Provider value={{upload, dispatch}}>\r\n    {children}\r\n  </UploadContext.Provider>\r\n}\r\n\r\nexport default function useUploadContext() {\r\n  const upload = useContext(UploadContext)\r\n  return upload\r\n}","import React from \"react\"\r\nimport { StyleProp, TextStyle } from \"react-native\";\r\nimport Hyperlink from \"react-native-hyperlink\";\r\nimport { Text } from \"../Themed\";\r\n\r\ntype MessageContentProps = {textStyle?:StyleProp<TextStyle>, selectable?:boolean, onPressLink?:any}\r\n\r\nconst MessageContentView = (props:MessageContentProps  & {content?:string})=>{\r\n    /* @ts-ignore */\r\n    return <Hyperlink linkDefault={ true } style={{wordBreak:\"break-word\"}} linkStyle={{color: '#12b886'}} onPress={props.onPressLink}>\r\n        <Text selectable={props.selectable} style={props.textStyle}>{props.content}</Text>\r\n    </Hyperlink>\r\n}\r\n\r\nexport default MessageContentView","import React from 'react';\r\nimport Clipboard from '@react-native-clipboard/clipboard/dist';\r\nimport CommonButton from '../components/CommonButton';\r\nimport useModalsContext from '../hooks/useModalsContext';\r\nimport { Text, View } from '../components/Themed';\r\nimport useLangContext from '../hooks/useLangContext';\r\nimport { BottomSheet } from '../components/ModalSection';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport Colors from '../constants/Colors';\r\nimport { Ionicons } from '../lib/@expo/vector-icons';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport { useMessengerContentMutation } from '../hooks/lists/useMessengerContentList';\r\nimport useModalEffect from '../hooks/useModalEffect';\r\nimport { EditorContent, MessengerContent } from '../types';\r\nimport { regexForStripHTML } from '../components/Messages/EditorPreview';\r\n\r\n\r\n\r\nexport default function MessageModal({content, isOwner, sendToScreen}:{content:MessengerContent, isOwner:boolean, sendToScreen?:(e:{value:string, editorValue:string})=>void}) {\r\n  const message = content.message_set[0]\r\n  const editorContents = (content.attatchment_set.filter(v=>v.type=='editor') as EditorContent[])\r\n  const editor  = editorContents.length>0?editorContents[0]:undefined\r\n  const fullContent = editor?editor.title.concat('\\r\\n', editor.description.replaceAll(regexForStripHTML, '')):message.content\r\n  const { lang } = useLangContext()\r\n  const { setModal } = useModalsContext()\r\n  const theme = useColorScheme()\r\n  const contentMutation = useMessengerContentMutation()\r\n  const back = ()=>{\r\n    setModal(MessageModal, null)\r\n  }\r\n  useModalEffect(back, [])\r\n  return <BottomSheet>\r\n    <View style={{flexDirection:'row', width:'100%'}}>\r\n      <View style={{flex:1, flexDirection:'row'}}>\r\n        <TouchableOpacity onPress={back}>\r\n          <Ionicons size={20} name=\"arrow-back\" color={Colors[theme].text}/>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={{flex:1}}>\r\n        <Text style={{fontSize:20, textAlign:'center'}}>{lang('Message')}</Text>\r\n      </View>\r\n      <View style={{flex:1}}/>\r\n    </View>\r\n    <View style={{marginBottom: 20, height: 1, width: '100%'}} lightColor=\"#ddd\" darkColor=\"rgba(255,255,255, 0.3)\" />\r\n      <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} title={lang('copy')} onPress={()=>{Clipboard.setString(fullContent);back()}}/>\r\n      {editor && sendToScreen && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} title={lang('move to editor')} onPress={()=>{sendToScreen({value:editor.title, editorValue:editor.description});back()}}/>}\r\n      {isOwner && content.timer && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} textStyle={{color:'red'}} title={lang('delete timer')} onPress={()=>{contentMutation.patch({id:content.id, timer:null});back()}}/>}\r\n      {isOwner && <CommonButton style={{height:40, width:'100%', maxWidth:320, justifyContent:'center'}} textStyle={{color:'red'}} title={lang('delete')} onPress={()=>{contentMutation.patch({id:content.id, is_archive:true});back()}}/>}\r\n  </BottomSheet>\r\n}\r\n","import React, { Suspense } from 'react'\r\nimport CommonSection from \"../CommonSection\"\r\nimport { View, Text } from \"../Themed\"\r\nimport { EditorContent } from \"../../types\"\r\nimport useColorScheme from \"../../hooks/useColorScheme\";\r\nimport Colors from \"../../constants/Colors\";\r\n\r\nconst RenderHTML = React.lazy(()=> import('react-native-render-html'))\r\n\r\nexport const regexForStripHTML = /<\\/?[^>]*>/gi;\r\n\r\nexport default React.memo(({content}:{content:EditorContent})=>{\r\n    const theme = useColorScheme()\r\n    return <View>\r\n        <Text style={{fontSize:18, fontWeight:'600', minWidth:140}}>{content.title}</Text>\r\n        <CommonSection containerStyle={{width:'100%', margin:0}} bodyStyle={{borderWidth:0, borderRadius:0, borderTopWidth:1, padding:0, alignItems:\"flex-start\"}}>\r\n            <Suspense fallback={<Text>{content.description.replaceAll(regexForStripHTML, '')}</Text>}>\r\n                <RenderHTML contentWidth={320} source={{'html':content.description}} baseStyle={{color:Colors[theme].text}}/>\r\n            </Suspense>\r\n        </CommonSection>\r\n    </View>\r\n})","import React, { MutableRefObject } from 'react'\r\nimport { Image, Linking } from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport CommonSection from \"../CommonSection\"\r\nimport { View, Text } from \"../Themed\"\r\nimport { Link } from \"../../types\"\r\n\r\n\r\n\r\nexport default ({link, isMobile, touchableRef}:{link:Link, isMobile:boolean, touchableRef:MutableRefObject<()=>boolean>})=>{\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={{padding:0}}>\r\n    <TouchableOpacity \r\n        onPress={()=>touchableRef.current() && Linking.openURL(link.url)}\r\n        onLongPress={()=>{}}\r\n        style={{width:'100%', flexDirection:'row'}}\r\n    >\r\n        {link.image_url?<Image source={{uri:link.image_url}} resizeMode=\"cover\" style={{ width:'100%', maxWidth:isMobile?120:150, maxHeight:isMobile?120:150, borderWidth:1}}/>:undefined}\r\n        <View style={{flex:1, marginHorizontal:20}}>\r\n            <Text style={{fontSize:18}}>{link.title}</Text>\r\n            <Text style={{fontSize:14}}>{link.description}</Text>\r\n            <Text style={{fontSize:12}}>{link.url}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, { MutableRefObject } from 'react'\r\nimport { Image, Linking } from \"react-native\"\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\"\r\nimport CommonSection from \"../CommonSection\"\r\nimport { FontAwesome } from '../../lib/@expo/vector-icons'; \r\nimport { View, Text } from \"../Themed\"\r\nimport { File } from \"../../types\"\r\nimport useColorScheme from '../../hooks/useColorScheme';\r\nimport Colors from '../../constants/Colors';\r\n\r\nfunction humanFileSize(size:number) {\r\n    var i = size == 0 ? 0 : Math.floor(Math.log(size) / Math.log(1024));\r\n    return (size / Math.pow(1024, i)).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\r\n  }\r\n  \r\n\r\nexport default ({file, isMobile, showBorder, touchableRef}:{file:File, isMobile:boolean, showBorder:ConstrainBoolean, touchableRef:MutableRefObject<()=>boolean>})=>{\r\n    const theme = useColorScheme()\r\n    return <CommonSection containerStyle={{marginHorizontal:0}} bodyStyle={showBorder?{padding:10}:{borderWidth:0, padding:0}}>\r\n    <TouchableOpacity \r\n        onPress={()=>touchableRef.current() && Linking.openURL(file.file)} \r\n        onLongPress={()=>{}}\r\n        style={{flexDirection:'row', alignItems:'flex-start', width:'100%'}} \r\n    >\r\n        {   file.thumbnail?\r\n            <Image source={{uri:file.thumbnail}} resizeMode=\"cover\" style={{width:isMobile?120:150, height:isMobile?120:150, borderWidth:1}}/>:\r\n            <FontAwesome name=\"file-o\" size={20} color={Colors[theme].iconColor} />}\r\n        <View style={{flex:1, marginHorizontal:10}}>\r\n            <Text style={{fontSize:18}}>{file.filename}</Text>\r\n            <Text style={{fontSize:14}}>{humanFileSize(file.filesize)}</Text>\r\n        </View>\r\n    </TouchableOpacity>\r\n    </CommonSection>\r\n}","import React, {useCallback, useMemo, useRef} from \"react\"\r\nimport { View, TouchableOpacity } from 'react-native';\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport { Auth } from \"../../hooks/useAuthContext\";\r\nimport useMessengerContentList, { MessengerContentPage } from \"../../hooks/lists/useMessengerContentList\"\r\nimport useIsMobile from \"../../hooks/useIsMobile\"\r\nimport useModalsContext from \"../../hooks/useModalsContext\"\r\nimport { Text } from '../Themed' \r\nimport Avatar from '../Avatar';\r\nimport LinkPreview from './LinkPreview';\r\nimport FilePreview from './FilePreview';\r\nimport MessageModal from '../../modals/MessageModal';\r\nimport CommonSection from \"../CommonSection\";\r\nimport { timerToString } from \"./TimerTags\";\r\nimport useViewerContentList from \"../../hooks/lists/useMessengerViewerList\";\r\nimport EditorPreview from \"./EditorPreview\";\r\nimport { MessengerContent } from \"../../types\";\r\nimport MessageContentView from \"./MessageContentView\";\r\n\r\nconst MessengerContentPageItem = React.memo((props:MessengerContentPage & {ownerId?:number, reverse?:boolean, getOnPress?:(content:MessengerContent)=>()=>void})=>{\r\n    const lastTouchRef = useRef(Date.now()) \r\n    const touchableRef = useRef(()=>{\r\n      return Date.now() - lastTouchRef.current > 350\r\n    })\r\n    const isMobile = useIsMobile()\r\n    let nextPage = props.next;\r\n      while(nextPage?.next && nextPage.current.length==0){\r\n        nextPage = nextPage.next\r\n      }\r\n      const nextContent = nextPage?.current[0]\r\n      return <View \r\n        style={{flexDirection: props.reverse?'column-reverse':'column'}}\r\n        onTouchMove={()=>{lastTouchRef.current=Date.now()}}\r\n      >  \r\n        {props.current.map((content, index2)=>{\r\n          const next = index2 + 1 < props.current.length?props.current[index2+1]:nextContent\r\n          const created:string = content.created.slice(0, 16)\r\n          const date = created.slice(0, 10)\r\n          const isSystem = content.user == null\r\n          const isFirst = next==undefined || (content.user != next.user || created != next.created.slice(0, 16))\r\n          const isSelf = props.ownerId == content.user\r\n          const dayChanged = next==undefined || date != next.created.slice(0, 10)\r\n          const message = content.message_set[0]\r\n          if (isSystem)\r\n            return <View key={content.id} style={{flexDirection:'row', justifyContent:'center', width:'100%', marginVertical:5}}>\r\n              <Text>{message.content}</Text>\r\n            </View>\r\n          return <View key={content.id}>\r\n            {dayChanged?<View style={{flexDirection:'row', justifyContent:'center', width:'100%'}}><Text>{date}</Text></View>:undefined}\r\n            <View key={content.id} style={{flexDirection:'row', justifyContent:isSelf?'space-between':'flex-start', width:'100%'}}>\r\n              {isFirst && !isSelf? <View style={{marginTop:3, marginLeft:12}}><Avatar name={content.name} userId={content.user} size={36}/></View>:<View style={{width:48}}/>}\r\n              <CommonSection autoScale outerContainerStyle={{maxWidth:'90%'}} title={isFirst?content.name:undefined} titleStyle={{flex:undefined}} bodyStyle={{padding:10}} subtitle={`${created.slice(11)}`}>\r\n                <TouchableOpacity onLongPress={props.getOnPress?.(content)}>\r\n                  {content.timer && <View style={{flexDirection:'row', alignItems:'stretch'}}>\r\n                    <Text style={{fontSize:12}}>⌚</Text>\r\n                    <Text style={{fontSize:12}} selectable={!isMobile}>{timerToString(content.timer)}</Text>\r\n                  </View>}\r\n                  <MessageContentView selectable={!isMobile} textStyle={{textAlign:isSelf?'right':'left'}} onPressLink={touchableRef.current()?undefined:()=>{}} content={message.content}/>\r\n                  {\r\n                    content.attatchment_set.map((attatchment, aIndex)=>{\r\n                      if (attatchment.type=='editor')\r\n                        return <EditorPreview key={aIndex} content={attatchment}/>\r\n                      if (attatchment.type=='file')\r\n                        return <FilePreview key={aIndex} file={attatchment} isMobile={isMobile} showBorder={false} touchableRef={touchableRef}/>\r\n                      if (attatchment.type=='link')\r\n                        return <LinkPreview key={aIndex} link={attatchment} isMobile={isMobile} touchableRef={touchableRef}/>\r\n                    })\r\n                  }\r\n                </TouchableOpacity>\r\n              </CommonSection>\r\n            </View>\r\n          </View>\r\n        })}\r\n      </View>\r\n  \r\n  })\r\n\r\nexport default (props:{channel_id:number, auth?:Auth, reverse?:boolean, sendToScreen?:(e:any)=>void})=>{\r\n    const height = useRef(0)\r\n    const {data, fetchNextPage } = props.auth?useMessengerContentList(props.channel_id):useViewerContentList(props.channel_id)\r\n    const ownerId = useMemo(()=>props.auth?.user?.id, [props.auth])\r\n    const { setModal } = useModalsContext()\r\n    const getOnPress = (content: MessengerContent)=>()=>setModal(MessageModal, {content, isOwner:ownerId == content.user, sendToScreen:props.sendToScreen})\r\n    const renderItem = useCallback(({item, index}:{item:MessengerContentPage, index:number})=><MessengerContentPageItem \r\n      {...item} \r\n      ownerId={ownerId} \r\n      reverse={props.reverse}\r\n      getOnPress={getOnPress}  \r\n    />, [ownerId])\r\n    return <FlatList\r\n        style={{flexDirection: props.reverse?'column-reverse':'column'}}\r\n        contentContainerStyle={{padding:10, flexGrow:1, flexDirection: props.reverse?'column-reverse':'column'}}\r\n        data={data?.pages}\r\n        renderItem={renderItem}\r\n        onScroll={(e)=>{\r\n          if (e.nativeEvent.contentSize.height - height.current + (props.reverse?1:-1)*e.nativeEvent.contentOffset.y < 1)\r\n            fetchNextPage()\r\n        }}\r\n        onLayout={(p)=>{height.current = p.nativeEvent.layout.height}}\r\n      />\r\n}","import { useInfiniteQuery } from \"react-query\"\r\nimport { getMessengerContentList } from \"../../services\"\r\nimport { MessengerContentPage } from \"./useMessengerContentList\"\r\n\r\n\r\nexport default function useViewerContentList(channel_id:number){  \r\n  const { data, fetchNextPage } = useInfiniteQuery<MessengerContentPage>(\r\n    [\"ViewerContentList\", channel_id], \r\n    async({pageParam})=>getMessengerContentList(channel_id, pageParam, true).then(current=>({current})), \r\n    {\r\n      select:data=>{\r\n        if(data.pages.length > 1)\r\n          data.pages[data.pages.length - 2].next = data.pages[data.pages.length - 1]\r\n        return data;\r\n      },\r\n      getNextPageParam:(lastPage)=>lastPage?.current.length?lastPage.current[lastPage.current.length - 1].id:undefined,\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false,\r\n    }\r\n  )\r\n  return { data, fetchNextPage }\r\n}\r\n","import React, {useState, useEffect} from \"react\"\r\nimport dayjs from \"dayjs\";\r\nimport {View, TouchableOpacity} from 'react-native'\r\nimport { Text } from \"../Themed\";\r\nimport useTimerMessageContentList from \"../../hooks/lists/useTimerMessageContent\";\r\nimport { MessengerContent } from \"../../types\";\r\nimport Avatar from \"../Avatar\";\r\nimport MessageContentView from \"./MessageContentView\";\r\n\r\nexport function timerFormat(datetime:string){\r\n    return _timerFormat(dayjs(datetime), dayjs())\r\n}\r\n\r\nfunction _timerFormat(m:dayjs.Dayjs, now:dayjs.Dayjs){\r\n    if (m.year() != now.year()){\r\n        return m.format('YYYY.MM')\r\n    }\r\n    if(m.month()!= now.month() || m.date() != now.date()){\r\n        return m.format('MM.DD')\r\n    }\r\n    return m.format('HH:mm')\r\n  }\r\n\r\nexport function timerToString(timer:string){\r\n    return dayjs(timer).format('YYYY.MM.DD HH:mm')\r\n}\r\n\r\nconst TimerTag = (props:{data:MessengerContent, now:dayjs.Dayjs, isExpand:boolean, setExpand:(id?:number)=>void})=>{\r\n    const start = dayjs(props.data.created)\r\n    const end = dayjs(props.data.timer)\r\n    const ratio = (start.diff(props.now)/start.diff(end))\r\n    const message = props.data.message_set[0]\r\n    return <TouchableOpacity onPress={()=>props.setExpand(props.isExpand?undefined:props.data.id)}>\r\n        <View style={{backgroundColor:'lightgray', borderRadius:20, overflow:'hidden', margin:5}}>\r\n            <View style={{backgroundColor:'darkgray', position:'absolute', width:`${ratio*100}%`, height:'100%'}}/>\r\n            {props.isExpand?\r\n            <View style={{paddingVertical:5, paddingHorizontal:5, maxWidth:270}}>\r\n                <View style={{flexDirection:'row'}}>\r\n                    <Avatar name={props.data.name} userId={props.data.user} size={20}/>\r\n                    <View style={{paddingHorizontal:5}}><Text>{props.data.name}</Text></View>\r\n                </View>\r\n                {props.data.timer &&\r\n                <View style={{flexDirection:'row', alignItems:'stretch'}}>\r\n                    <Text>⌚</Text>\r\n                    <Text selectable>{timerToString(props.data.timer)}</Text>\r\n                </View>}\r\n                {/* @ts-ignore */}\r\n                <MessageContentView selectable content={message.preview_content || message.content}/>\r\n            </View>:    \r\n            <View style={{paddingVertical:5, paddingHorizontal:5, flexDirection:'row'}}>\r\n                <Avatar name={props.data.name} userId={props.data.user} size={20}/>\r\n                <View style={{paddingHorizontal:5}}><Text>{_timerFormat(end, props.now)}</Text></View>\r\n            </View>}\r\n        </View>\r\n    </TouchableOpacity>\r\n}\r\n\r\n\r\nexport default (props:{channel_id:number})=>{\r\n    const timerMessages = useTimerMessageContentList(props.channel_id)\r\n    const [now, setNow] = useState(dayjs())\r\n    const [expand, setExpand] = useState<number>()\r\n    useEffect(()=>{\r\n        const timeout = setTimeout(()=>{\r\n            setNow(dayjs())\r\n        }, 2000)\r\n        return ()=>clearTimeout(timeout)\r\n    }, [now])\r\n    return <View style={{flexDirection:'row', paddingTop:5, paddingHorizontal:20}}>\r\n        {timerMessages?.map((v,i)=><TimerTag key={i} data={v} now={now} isExpand={v.id==expand} setExpand={setExpand}/>)}\r\n    </View>\r\n}","import { useEffect, useMemo } from \"react\"\r\nimport { useQuery, useQueryClient } from \"react-query\"\r\nimport { getTimerMessageContentList } from \"../../services\"\r\nimport { MessengerContent } from \"../../types\"\r\nimport useWebsocketContext from \"../useWebsocketContext\"\r\nimport dayjs from \"dayjs\"\r\n\r\nexport default function useTimerMessageContentList(channel_id:number){  \r\n  const queryClient = useQueryClient()\r\n  const { data } = useQuery<MessengerContent[]>(\r\n    [\"TimerMessageContentList\", channel_id], \r\n    async()=>await getTimerMessageContentList(channel_id, dayjs().toISOString()), \r\n    {\r\n      refetchOnReconnect:false,\r\n      refetchOnWindowFocus:false\r\n    }\r\n  )\r\n  const { lastJsonMessage } = useWebsocketContext()\r\n  useEffect(()=>{\r\n    if(lastJsonMessage !=null && lastJsonMessage['data']['channel'] == channel_id){\r\n      if(lastJsonMessage['type']=='next_message'){\r\n        if(lastJsonMessage['data']['timer'] && dayjs() < dayjs(lastJsonMessage['data']['timer']))\r\n          queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\r\n            return [...(_data || []), lastJsonMessage['data']]\r\n          })\r\n      }\r\n      if(lastJsonMessage['type']=='update_message'){\r\n        queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\r\n          return [...(_data?.filter(v=>v.id!=lastJsonMessage['data'].id || (lastJsonMessage['data']['timer']!=null && !lastJsonMessage['data']['is_archive'])) || [])]\r\n        })\r\n      }\r\n    }\r\n  }, [lastJsonMessage])\r\n  const sorted = useMemo(()=>data?.sort((a, b)=>(a.timer || '') > (b.timer || '')?1:-1), [data])\r\n  useEffect(()=>{\r\n    if (sorted?.[0]?.timer){\r\n      const id = sorted[0].id\r\n      const ms = Math.min(dayjs(sorted[0].timer).diff(dayjs()), Number.MAX_VALUE)\r\n      let timeout = setTimeout(()=>{\r\n        queryClient.setQueryData<MessengerContent[]>([\"TimerMessageContentList\", channel_id], (_data)=>{\r\n          return (_data || []).filter(v=>v.id!=id || dayjs(v.timer).diff(dayjs()) > 0)\r\n        })\r\n      }, ms)\r\n      return ()=>clearTimeout(timeout)\r\n    }\r\n  },[sorted])\r\n  return sorted\r\n}\r\n"],"sourceRoot":""}